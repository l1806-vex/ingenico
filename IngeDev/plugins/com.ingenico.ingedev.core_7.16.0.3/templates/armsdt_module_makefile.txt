#*******************************************************************************
#* %MAKEFILE_FILE_NAME%
#*------------------------------------------------------------------------------
#* Makefile used to generate the module binaries (ARM SDT format).
#* This file was automatically generated by IngeDev. Please, do not edit!
#*******************************************************************************

#-------------------------------------------------------------------------------
# Include variables list set in the runtime-workspace - updated by IngeDev
#-------------------------------------------------------------------------------
include vars.mk
include %OS_VARS_MK_FILE%

#-------------------------------------------------------------------------------
# Include variables list set for all projects used for linked libraries
# and added common modules - updated by IngeDev
#-------------------------------------------------------------------------------
%PROJECTS_VARS_MK_FILE%
#-------------------------------------------------------------------------------
# Include added common modules makefiles - updated by IngeDev
#-------------------------------------------------------------------------------
%ADDED_COM_MOD_MK_FILES%
#-------------------------------------------------------------------------------
# General constants
#-------------------------------------------------------------------------------
EMPTY :=
SPACE := $(EMPTY) $(EMPTY)

#-------------------------------------------------------------------------------
# General parameters - updated by IngeDev
#-------------------------------------------------------------------------------
# Module type (standardModule or commonModule)
MODULE_TYPE     = %MODULE_TYPE%
# Module renumbering mode
MODULE_REN_MODE = %MODULE_REN_MODE%
# Next module name
NEXT_MOD_NAME   = %NEXT_MOD_NAME%
# Header maximum size
HEADER_MAX_SIZE = %HEADER_MAX_SIZE%
# Module address space maximum size
MODULE_MAX_SIZE = %MODULE_MAX_SIZE%
# Code maximum size
CODE_MAX_SIZE   = %CODE_MAX_SIZE%
# Entry point address set for common module and standard module except MainModule
# to avoid linker warning message "No entry point for image".
ENTRY_ADDR      = %ENTRY_ADDR%

#-------------------------------------------------------------------------------
# Project and file names - updated by IngeDev
#-------------------------------------------------------------------------------
# Project name
PROJECT_NAME    = %PROJECT_NAME%
# Sub-Project name
SUB_PRJ_NAME    = %SUB_PROJECT_NAME%
# Configuration name
CFG_NAME        = %CONFIG_NAME%
<<if MainModule
# Configuration file name
CFG_FILE_NAME   = %CONFIG_FILE_NAME%
<<endif
# Target file name
TRG_FILE_NAME   = %TARGET_FILE_NAME%
# Mapping file name (used during link process)
MAPPING_DEF_NAME= %MAPPING_DEF_NAME%

#-------------------------------------------------------------------------------
# Directories - updated by IngeDev
#-------------------------------------------------------------------------------
# Binaries directory
BIN_DIR         = %BIN_DIR%
# Object directory
OBJ_DIR         = %OBJ_DIR%
# Configuration directory
CFG_DIR         = %CFG_DIR%

#-------------------------------------------------------------------------------
# Input files path for the current sub-project in the current configuration
#-------------------------------------------------------------------------------
# Sub-project configuration path
CFG_PATH        = $(SUB_PRJ_NAME)/$(CFG_NAME)
<<if MainModule
# Common configuration path (for input file => original configuration tlv file)
COMMON_CFG_PATH = $(CFG_DIR)/$(CFG_NAME)
<<endif

#-------------------------------------------------------------------------------
# Output files path for the current sub-project in the current configuration
#-------------------------------------------------------------------------------
# Object files path
OBJ_PATH        = $(OBJ_DIR)/$(SUB_PRJ_NAME)/$(CFG_NAME)
# Binary files path
BIN_PATH        = $(BIN_DIR)/$(CFG_NAME)
<<if MainModule
# Configuration tlv file path (after modification)
TLV_CFG_FILE_PATH= $(OBJ_DIR)/$(COMMON_CFG_PATH)
<<endif

#-------------------------------------------------------------------------------
# Include additional makefiles - updated by IngeDev
#-------------------------------------------------------------------------------
%ADDITIONAL_MK_FILES%

<<if keyUsed
#-------------------------------------------------------------------------------
# Key signature parameters - updated by IngeDev
#-------------------------------------------------------------------------------
# Key name
KEY_NAME        = %KEY_NAME%
# Key number
KEY_NUM         = %KEY_NUM%
# Key location
KEY_LOCATION    = $(KEY_PATH)/$(KEY_NAME)

<<endif
#-------------------------------------------------------------------------------
# Compiler, linker, assembler
#-------------------------------------------------------------------------------
<<if thumb
# Arm Compiler executable (thumb mode)
CC              = tcc.exe
# Arm Assembler executable (thumb mode)
AS              = tasm.exe
<<else
# Arm Compiler executable (arm mode)
CC              = armcc.exe
# Arm Assembler executable (arm mode)
AS              = armasm.exe
<<endif
# Arm Linker executable
LD              = armlink.exe

#-------------------------------------------------------------------------------
# Gnu Win32 tools
#-------------------------------------------------------------------------------
# Remove tool
RM              = rm.exe -fr
# Make directory tool
MKDIR           = mkdir.exe -p
# Copy tool
CP              = cp.exe
# Printf tool
PRINTF          = printf.exe
# File string replacement tool (Global Search And Replace)
GSAR            = gsar.exe -o

#-------------------------------------------------------------------------------
# Ingenico tools
#-------------------------------------------------------------------------------
# TLV Converter tool
CV              = convtlv.exe
# Signature tool
SG              = ingesign.exe
# Binary file checking tool
CF              = checkU32BinFile.exe

#-------------------------------------------------------------------------------
# Includes path used in compilation process - updated by IngeDev
#-------------------------------------------------------------------------------
INCLUDES_PATH   = \
%USER_INCLUDES_PATH%
$(ARM_SDT_SYS_INC_PATH)

#-------------------------------------------------------------------------------
# Libraries to be included during link operation - updated by IngeDev
#-------------------------------------------------------------------------------
LIBS            = \
<<if linkInterModuleLibBeforeUserLibs
$(OBJ_DIR)/InterModuleLib/$(CFG_NAME)/InterModuleLib.lib \
<<endif
%ADDITIONAL_LINKED_LIBS%
%ADDITIONAL_SYST_LIBS%
<<if linkInterModuleLibAfterUserLibs
$(OBJ_DIR)/InterModuleLib/$(CFG_NAME)/InterModuleLib.lib \
<<endif
$(ARM_SDT_SYS_LIB_PATH)/UC32lib.16l

#-------------------------------------------------------------------------------
# Compilation and link input files
#-------------------------------------------------------------------------------
# Mapping file location (used during link process)
MAP_DEF_LOCATION= $(CFG_PATH)/$(MAPPING_DEF_NAME)
# TLV original code file location
TLV_ORIGINAL_CODE_LOCATION= $(CFG_PATH)/code.tlv
# TLV code file location
TLV_CODE_LOCATION= $(OBJ_PATH)/code.tlv
<<if MainModule
# TLV original configuration file location
TLV_ORIGINAL_CFG_LOCATION= $(COMMON_CFG_PATH)/config.tlv
# TLV configuration file location
TLV_CFG_LOCATION= $(TLV_CFG_FILE_PATH)/config.tlv
<<endif

#-------------------------------------------------------------------------------
# Binary result output file(s) - updated by IngeDev
#-------------------------------------------------------------------------------
BIN_CODE_FILE   = $(BIN_PATH)/$(TRG_FILE_NAME)
BIN_CFG_FILE    = $(BIN_PATH)/$(CFG_FILE_NAME)

#-------------------------------------------------------------------------------
# Intermediate files
#-------------------------------------------------------------------------------
# Result map file location
INTER_MAP_FILE  = $(OBJ_PATH)/$(TRG_FILE_NAME).map
<<if MainModule
# TPL configuration file location
INTER_CFG_TPL   = $(OBJ_PATH)/$(CFG_FILE_NAME).tpl
<<endif
# TPL code file location
INTER_CODE_TPL  = $(OBJ_PATH)/$(TRG_FILE_NAME).tpl
# AXF file location
INTER_AXF       = $(OBJ_PATH)/$(TRG_FILE_NAME).axf
# Compiler options file location
INTER_CC_OPTS = $(OBJ_PATH)/cc.opt
# Assembler options file location
INTER_AS_OPTS = $(OBJ_PATH)/as.opt
# Linker options file location
INTER_LD_OPTS = $(OBJ_PATH)/ld.opt

#-------------------------------------------------------------------------------
# Specific compiler, linker, assembler options - updated by IngeDev
#-------------------------------------------------------------------------------
# Compiler options
CC_SPEC_OPTS    = %USER_CC_OPTIONS% %DEFAULT_DEFINE% %USER_DEFINES% $(INCLUDES_PATH)
# Assembler options
AS_SPEC_OPTS    = %USER_AS_OPTIONS% $(INCLUDES_PATH)
# Linker options
LD_SPEC_OPTS    = %USER_LD_OPTIONS%

#-------------------------------------------------------------------------------
# SRC_OBJS is the list of the project object files - updated by IngeDev
#-------------------------------------------------------------------------------
SRC_OBJS        = \
<<if MainModule
$(OBJ_PATH)/__main.o \
$(OBJ_PATH)/__heap.o \
<<endif
%USER_OBJECT_LIST%

<<if linkInterModuleByObj
#-------------------------------------------------------------------------------
# INTER_MOD_OBJS is the list of inter-module object files to be linked with
# the module - updated by IngeDev
#-------------------------------------------------------------------------------
INTER_MOD_OBJS = \
%INTER_MODULE_OBJS%
<<endif

#-------------------------------------------------------------------------------
# Dependencies - updated by IngeDev
#-------------------------------------------------------------------------------
DEPENDENCIES = \
$(CFG_PATH)/%MAKEFILE_FILE_NAME% \
$(VARS_MK_DEPENDENCY) \
$(OS_VARS_MK_DEPENDENCY) \
$(PROJECTS_VARS_MK_DEPENDENCIES)

<<if MainModule
#-------------------------------------------------------------------------------
# Added common module binaries dependencies - updated by IngeDev
#-------------------------------------------------------------------------------
ADDED_COM_MOD_DEPENDENCIES  = \
%ADDED_COM_MOD_DEPENDENCIES%
<<endif

#===============================================================================
# Rule to make the project - updated by IngeDev
#===============================================================================
#-------------------------------------------------------------------------------
# Macro for initializing signing tool
#-------------------------------------------------------------------------------
define SIGN_INIT
<<if signingBox
	@$(SG) PORT \\\\\\\\.\\\\$(SIGNING_BOX_COM_PORT) >/dev/null
<<endif
	@$(SG) APP_CHECK_DEBUG OFF >/dev/null
	@$(SG) SYMBOL_FOLDER "$(OBJ_PATH)" >/dev/null
	@$(SG) TEMPLATE_FOLDER "$(OBJ_PATH)" >/dev/null
	@$(SG) APP_CODE AUTOMATIC >/dev/null
	@$(SG) APP_DATA AUTOMATIC >/dev/null
	@$(SG) APP_TABLE EntryTable >/dev/null
	@$(SG) APP_LINK getJumpTables >/dev/null
<<if MainModule
	@$(SG) APP_HEAP ApplicationHeap >/dev/null
<<endif
endef

<<if MainModule
#-------------------------------------------------------------------------------
# Rule for the configuration binary file generation
#-------------------------------------------------------------------------------
$(BIN_CFG_FILE): $(BIN_CODE_FILE) $(INTER_CFG_TPL)
	$(SIGN_INIT)
	@$(PRINTF) "'$@' signature in progress...\n"
<<if signingBox
	$(SG) "$(INTER_CFG_TPL)" "$@" BYHSC ARM
<<else
	$(SG) "$(INTER_CFG_TPL)" "$@" "$(KEY_LOCATION)" $(KEY_NUM) ARM
<<endif
	@$(PRINTF) "'$@' configuration file generated.\n"
<<endif

#-------------------------------------------------------------------------------
# Rule for the code binary file generation
#-------------------------------------------------------------------------------
$(BIN_CODE_FILE): $(INTER_AXF) $(INTER_CODE_TPL)
	$(SIGN_INIT)
	@$(SG) START_SIGNATURE >/dev/null
	@$(PRINTF) "'$@' signature in progress...\n"
<<if signingBox
	$(SG) "$(INTER_AXF)" "$@" BYHSC ARM
<<else
	$(SG) "$(INTER_AXF)" "$@" "$(KEY_LOCATION)" $(KEY_NUM) ARM
<<endif
	@$(PRINTF) "'$@' code file generated.\n"

#===============================================================================
# Rule to convert TLV files to TPL files
#===============================================================================
$(INTER_CODE_TPL): $(TLV_CODE_LOCATION)
	$(CV) "$(subst /,\\,$<)" "$(subst /,\\,$@)" /l

<<if MainModule
$(INTER_CFG_TPL): $(TLV_CFG_LOCATION)
	$(CV) "$(subst /,\\,$<)" "$(subst /,\\,$@)" /l
<<endif

#===============================================================================
# Rule for the link process
#===============================================================================
<<if linkInterModuleByObj
$(INTER_AXF): $(MAP_DEF_LOCATION) $(SRC_OBJS) $(INTER_LD_OPTS) $(INTER_MOD_OBJS) $(LIBS)
<<else
$(INTER_AXF): $(MAP_DEF_LOCATION) $(SRC_OBJS) $(INTER_LD_OPTS) $(LIBS)
<<endif
	@$(PRINTF) "'$@' link in progress...\n"
	$(LD) $(LD_SPEC_OPTS) -via $(INTER_LD_OPTS) -list $(INTER_MAP_FILE) -scatter $< -o $@ $(LIBS)

#===============================================================================
# Rule for the compilation process - updated by IngeDev
#===============================================================================
<<if MainModule
$(OBJ_PATH)/__main.o: $(ARM_SDT_DEFAULT_SRC_PATH)/__main.s $(INTER_AS_OPTS) $(DEPENDENCIES)
	@$(PRINTF) "'$<' compilation in progress...\n"
	$(AS) $(AS_SPEC_OPTS) -o "$@" "$<" -via $(INTER_AS_OPTS)

$(OBJ_PATH)/__heap.o: $(ARM_SDT_DEFAULT_SRC_PATH)/__heap.s $(INTER_AS_OPTS) $(DEPENDENCIES)
	@$(PRINTF) "'$<' compilation in progress...\n"
	$(AS) $(AS_SPEC_OPTS) -PD "HEAPSIZE SETA %HEAP_SIZE%" -o "$@" "$<" -via $(INTER_AS_OPTS)
<<endif

%COMPILER_FILES_RULES%
#===============================================================================
# Rule to display sub-project name and configuration name
#===============================================================================
.PHONY: displayInfo
displayInfo:
	@$(PRINTF) "                                     *-*-*\n"
	@$(PRINTF) "--- Project '$(PROJECT_NAME)', Sub-project '$(SUB_PRJ_NAME)', Configuration '$(CFG_NAME)' -----\n"

#===============================================================================
# Rule to create output directories if it not already exist
#===============================================================================
.PHONY: createOutputDirs
createOutputDirs:
	@$(MKDIR) "$(OBJ_PATH)"
	@$(MKDIR) "$(BIN_PATH)"
<<if MainModule
	@$(MKDIR) "$(TLV_CFG_FILE_PATH)"
<<endif
	
#===============================================================================
# Rule to clean temporary files generated during signature process
#===============================================================================
.PHONY: cleanTmpFiles
cleanTmpFiles:
	@$(RM) "$(OBJ_PATH)/temp.bin"
	@$(RM) "$(OBJ_PATH)/temp1.bin"
	@$(RM) "$(OBJ_PATH)/temp2.bin"
	
#===============================================================================
# Rules to create intermediate option files - updated by IngeDev
#===============================================================================
$(INTER_CC_OPTS): $(DEPENDENCIES)
	$(PRINTF) "%DEFAULT_CC_OPTIONS%\n" > $@

$(INTER_AS_OPTS): $(DEPENDENCIES)
	$(PRINTF) "%DEFAULT_AS_OPTIONS%\n" > $@

$(INTER_LD_OPTS): $(DEPENDENCIES)
	$(PRINTF) "%DEFAULT_LD_OPTIONS%\n" > $@
<<if MainModule
	$(PRINTF) "$(OBJ_PATH)/__main.o\n" >> $@
	$(PRINTF) "$(OBJ_PATH)/__heap.o\n" >> $@
<<else
	$(PRINTF) "-entry $(ENTRY_ADDR)\n" >> $@
<<endif
%LINK_FILE_SRC_OBJS%
<<if linkInterModuleByObj
%LINK_FILE_INTER_MOD_OBJS%
<<endif
	
<<if MainModule
#===============================================================================
# Rule to :
# - copy original TLV configuration file to object directory and modify it
# - copy added common modules binaries to bin directory
#===============================================================================
$(TLV_CFG_LOCATION): $(TLV_ORIGINAL_CFG_LOCATION) $(ADDED_COM_MOD_DEPENDENCIES)
	@$(CP) "$(TLV_ORIGINAL_CFG_LOCATION)" "$(TLV_CFG_FILE_PATH)"
%ADDED_BIN_FILES%
<<endif

#===============================================================================
# Rule to copy original TLV code file to object directory
#===============================================================================
$(TLV_CODE_LOCATION): $(TLV_ORIGINAL_CODE_LOCATION)
	@$(CP) "$(TLV_ORIGINAL_CODE_LOCATION)" "$(OBJ_PATH)"

#===============================================================================
# Make build rule
#===============================================================================
.PHONY: build
<<if MainModule
build: displayInfo createOutputDirs $(TLV_CODE_LOCATION) $(TLV_CFG_LOCATION) $(BIN_CFG_FILE) cleanTmpFiles
<<else
build: displayInfo createOutputDirs $(TLV_CODE_LOCATION) $(BIN_CODE_FILE) cleanTmpFiles
<<endif
	$(CF) -h$(HEADER_MAX_SIZE) -m$(MODULE_MAX_SIZE) -c$(CODE_MAX_SIZE) -t$(MODULE_TYPE) -n$(SUB_PRJ_NAME) -x$(NEXT_MOD_NAME) -o$(MODULE_REN_MODE) -r "$(BIN_CODE_FILE)"
	@$(PRINTF) "done!\n"
	
#===============================================================================
# Make clean rule
#===============================================================================
.PHONY: clean
clean: displayInfo
	@$(PRINTF) "deleting intermediate files...\n"
	@$(RM) "$(BIN_CODE_FILE)"
<<if MainModule
	@$(RM) "$(TLV_CFG_FILE_PATH)/config.tlv"
	@$(RM) "$(BIN_CFG_FILE)"
%CLEAN_ADDED_BIN_FILES%
<<endif
ifneq "$(wildcard $(OBJ_PATH)/*.*)" ""
	@$(RM) "$(OBJ_PATH)/*.*"
endif
	@$(PRINTF) "done!\n"
