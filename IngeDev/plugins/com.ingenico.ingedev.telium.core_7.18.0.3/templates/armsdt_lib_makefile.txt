#*******************************************************************************
#* %MAKEFILE_FILE_NAME%
#*------------------------------------------------------------------------------
<<if rvds
#* Makefile used to generate the library binary (ARM RVDS format).
<<else
#* Makefile used to generate the library binary (ARM SDT format).
<<endif
#* This file was automatically generated by IngeDev. Please, do not edit!
#*******************************************************************************

#-------------------------------------------------------------------------------
# General constants
#-------------------------------------------------------------------------------
EMPTY :=
SPACE := $(EMPTY) $(EMPTY)

#-------------------------------------------------------------------------------
# Project and file names
#-------------------------------------------------------------------------------
# Project name
PROJECT_NAME    := %PROJECT_NAME%
# Compiler version
COMPILER_VERSION	:= %COMPILER_VERSION%
# Configuration name
CFG_NAME        := %CONFIG_NAME%

<<if hasAdditionalMakefilesFilter
#-------------------------------------------------------------------------------
# Include additional makefiles
#-------------------------------------------------------------------------------
%ADDITIONAL_MK_FILES%
<<endif

#-------------------------------------------------------------------------------
# Directories
#-------------------------------------------------------------------------------
# Binaries directory
BIN_DIR         := %BIN_DIR%
# Object directory
OBJ_DIR         := %OBJ_DIR%
# Build files directory
BUILD_FILES_DIR := %BUILD_FILES_DIR%
# Additional libraries object directory
# (set to blank string if no additional libraries)
ADD_LIBS_OBJ_DIR:= %ADD_LIBS_OBJ_DIR%

#-------------------------------------------------------------------------------
# Input files path for the current configuration
#-------------------------------------------------------------------------------
# Build files path
BUILD_FILES_PATH:= $(BUILD_FILES_DIR)/$(CFG_NAME)

#-------------------------------------------------------------------------------
# Output files path for the current configuration
#-------------------------------------------------------------------------------
# Object files path
OBJ_PATH        := $(OBJ_DIR)/$(CFG_NAME)
# Binary files path
BIN_PATH        := $(BIN_DIR)/$(CFG_NAME)
# Additional libraries object files path
ADD_LIBS_OBJ_PATH:=$(OBJ_PATH)/$(ADD_LIBS_OBJ_DIR)

#-------------------------------------------------------------------------------
# Compiler, assembler, archiver...
#-------------------------------------------------------------------------------
<<if rvds
# Arm Compiler executable
CC              := armcc.exe
# Arm Assembler executable
AS              := armasm.exe
<<else
<<if thumb
# Arm Compiler executable (thumb mode)
CC              := tcc.exe
# Arm Assembler executable (thumb mode)
AS              := tasm.exe
<<else
# Arm Compiler executable (arm mode)
CC              := armcc.exe
# Arm Assembler executable (arm mode)
AS              := armasm.exe
<<endif
<<endif
# Arm Archiver executable
<<if rvds
AR				:= armar.exe
<<else
AR              := armlib.exe
<<endif

#-------------------------------------------------------------------------------
# Gnu Win32 tools
#-------------------------------------------------------------------------------
# Remove tool
RM              := rm.exe -fr
# Make directory tool
MKDIR           := mkdir.exe -p
# Copy tool
CP              := cp.exe
# Printf tool
PRINTF          := printf.exe
# File string replacement tool (Global Search And Replace)
GSAR            := gsar.exe -o

#-------------------------------------------------------------------------------
# Includes path used in compilation process
#-------------------------------------------------------------------------------
INCLUDES_PATH   := \
<<if hasUserIncsFilter
%USER_INCLUDES%
<<endif
<<if hasPackagesIncsFilter
%PACKAGES_INCLUDES%
<<endif

<<if hasUserAsmIncsFilter
#-------------------------------------------------------------------------------
# Includes path used in assembler process
#-------------------------------------------------------------------------------
INCLUDES_ASM_PATH   := \
%USER_AS_INCLUDES%
<<endif

#-------------------------------------------------------------------------------
# Libraries to be included in archive library
#-------------------------------------------------------------------------------
LIBS            := \
<<if hasSimpleLibsFilter
%SIMPLE_LIBS%
<<endif
<<if hasImportedLibsFilter
%IMPORTED_LIBS%
<<endif
<<if hasProjectLibsFilter
%PROJECT_LIBS%
<<endif
<<if hasPackagesLibsFilter
%PACKAGES_LIBS%
<<endif

#-------------------------------------------------------------------------------
# Archive library result output file
#-------------------------------------------------------------------------------
LIB_FILE        := $(BIN_PATH)/%TARGET_FILE_NAME%.lib

#-------------------------------------------------------------------------------
# Intermediate files
#-------------------------------------------------------------------------------
# Compiler options file location
INTER_CC_OPTS   := $(OBJ_PATH)/cc.opt
# Assembler options file location
INTER_AS_OPTS   := $(OBJ_PATH)/as.opt

#-------------------------------------------------------------------------------
# Specific compiler, assembler and archiver options
#-------------------------------------------------------------------------------
# Specific compiler options
CC_SPEC_OPTS    := %USER_CC_OPTIONS% %DEFAULT_DEFINE%
<<if hasPackagesDefinesFilter
CC_SPEC_OPTS    += %PACKAGES_DEFINES%
<<endif
CC_SPEC_OPTS    += %USER_DEFINES% $(INCLUDES_PATH)
# Specific assembler options
AS_SPEC_OPTS    := %USER_AS_OPTIONS% %USER_AS_DEFINES% $(INCLUDES_PATH)
# Specific archiver options
AR_SPEC_OPTS    := %USER_AR_OPTIONS%

#-------------------------------------------------------------------------------
# SRC_OBJS is the list of the project object files
#-------------------------------------------------------------------------------
SRC_OBJS        := \
%USER_OBJECTS%

#-------------------------------------------------------------------------------
# Dependencies
#-------------------------------------------------------------------------------
DEPENDENCIES    := \
$(BUILD_FILES_PATH)/%MAKEFILE_FILE_NAME%

#===============================================================================
# Rule to make the project
#===============================================================================
#-------------------------------------------------------------------------------
# Rule for the library files generation
#-------------------------------------------------------------------------------
$(LIB_FILE): $(SRC_OBJS) $(LIBS)
	@$(PRINTF) "'$@' library generation in progress...\n"
%ARCHIVE_SRC_OBJS_LINES%
ifneq "$(words $(LIBS))" "0"
	@$(RM) "$(ADD_LIBS_OBJ_PATH)"
	@$(MKDIR) "$(ADD_LIBS_OBJ_PATH)"
%ADD_LIB_FILES_EXTRACT_CMD_LINES%
	@$(PRINTF) "'$@' add additional libraries object files...\n"
%ADD_LIB_FILES_CMD_LINES%
	@$(RM) "$(ADD_LIBS_OBJ_PATH)"	
endif
	@$(PRINTF) "'$@' library file generated.\n"

#===============================================================================
# Rule for the compilation process
#===============================================================================
%COMPILATION_RULES%
<<if hasProjectLibsFilter
#===============================================================================
# Rule use to call dependent project makefiles for build or clean operation
#===============================================================================
.PHONY: callProjectMakefileDependencies
callProjectMakefileDependencies:
%DEPENDENT_PROJECT_MAKEFILES_CALL_RULES%
<<endif
#===============================================================================
# Rule for project name and configuration name display
#===============================================================================
.PHONY: displayInfo
displayInfo:
	@$(PRINTF) "                                     *-*-*\n"
	@$(PRINTF) "--- Project '$(PROJECT_NAME)', Configuration '$(CFG_NAME)', Compiler '$(COMPILER_VERSION)' ---\n"

#===============================================================================
# Rule for build target progress info display
#===============================================================================
.PHONY: displayBuildInProgress
displayBuildInProgress:
	@$(PRINTF) "Build in progress...\n"

#===============================================================================
# Rule for output directories creation
#===============================================================================
.PHONY: createOutputDirs
createOutputDirs:
	@$(MKDIR) "$(OBJ_PATH)"
	@$(MKDIR) "$(BIN_PATH)"

#===============================================================================
# Rules for intermediate option files creation
#===============================================================================
$(INTER_CC_OPTS):
	$(PRINTF) "%DEFAULT_CC_OPTIONS%\n" > $@

$(INTER_AS_OPTS):
	$(PRINTF) "%DEFAULT_AS_OPTIONS%\n" > $@

#===============================================================================
# Make build rule
#===============================================================================
.PHONY: build
<<if hasProjectLibsFilter
build: callProjectMakefileDependencies displayInfo displayBuildInProgress createOutputDirs $(LIB_FILE)
<<else
build: displayInfo displayBuildInProgress createOutputDirs $(LIB_FILE)
<<endif
	@$(PRINTF) "done!\n"

#===============================================================================
# Make clean rule
#===============================================================================
.PHONY: clean
<<if hasProjectLibsFilter
clean: callProjectMakefileDependencies displayInfo
<<else
clean: displayInfo
<<endif
	@$(PRINTF) "deleting intermediate files...\n"
	@$(RM) "$(LIB_FILE)"
ifneq "$(wildcard $(OBJ_PATH)/*.*)" ""
	@$(RM) "$(OBJ_PATH)/*.*"
endif
	@$(PRINTF) "done!\n"
