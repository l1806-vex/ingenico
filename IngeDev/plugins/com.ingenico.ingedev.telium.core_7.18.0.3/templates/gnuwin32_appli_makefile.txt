#*******************************************************************************
#* %MAKEFILE_FILE_NAME%
#*------------------------------------------------------------------------------
#* Makefile used to generate the Application DLL (GNU WIN32 format).
#* This file was automatically generated by IngeDev. Please, do not edit!
#*******************************************************************************

#-------------------------------------------------------------------------------
# General constants
#-------------------------------------------------------------------------------
EMPTY :=
SPACE := $(EMPTY) $(EMPTY)

#-------------------------------------------------------------------------------
# Project and file names
#-------------------------------------------------------------------------------
# Project name
PROJECT_NAME    := %PROJECT_NAME%
# Compiler version
COMPILER_VERSION	:= %COMPILER_VERSION%
# Configuration name
CFG_NAME        := %CONFIG_NAME%
# Target file name (without extension)
TRG_FILE_NAME   := %TARGET_FILE_NAME%

<<if hasAdditionalMakefilesFilter
#-------------------------------------------------------------------------------
# Include additional makefiles
#-------------------------------------------------------------------------------
%ADDITIONAL_MK_FILES%
<<endif

#-------------------------------------------------------------------------------
# Directories
#-------------------------------------------------------------------------------
# Binaries directory
BIN_DIR         := %BIN_DIR%
# Object directory
OBJ_DIR         := %OBJ_DIR%
# Build files directory
BUILD_FILES_DIR := %BUILD_FILES_DIR%

#-------------------------------------------------------------------------------
# VisualC object file to be included during link operation 
#-------------------------------------------------------------------------------
# VisualC object file to allow linking with VisualC library
VISUALC_OBJ_FILE = %SIMU_VISUALC_OBJ_PATH%/chkstk.o

#-------------------------------------------------------------------------------
# Input files path for the current configuration
#-------------------------------------------------------------------------------
# Build files path
BUILD_FILES_PATH:= $(BUILD_FILES_DIR)/$(CFG_NAME)

#-------------------------------------------------------------------------------
# Output files path for the current configuration
#-------------------------------------------------------------------------------
# Object files path
OBJ_PATH        := $(OBJ_DIR)/$(CFG_NAME)
# Binary files path
BIN_PATH        := $(BIN_DIR)/$(CFG_NAME)

#-------------------------------------------------------------------------------
# Compiler, linker, assembler, ...
#-------------------------------------------------------------------------------
# Gnu Win32 Compiler executable
CC              := gcc.exe
# Gnu Win32 Assembler executable
AS              := as.exe
# Gnu Win32 Strip debug symbol executable
STRIP           := strip.exe -g

#-------------------------------------------------------------------------------
# Gnu Win32 tools
#-------------------------------------------------------------------------------
# Remove tool
RM              := rm.exe -fr
# Make directory tool
MKDIR           := mkdir.exe -p
# Copy tool
CP              := cp.exe
# Printf tool
PRINTF          := printf.exe

#-------------------------------------------------------------------------------
# Includes path used in compilation process
#-------------------------------------------------------------------------------
INCLUDES_PATH   := \
<<if hasUserIncsFilter
%USER_INCLUDES%
<<endif
<<if hasPackagesIncsFilter
%PACKAGES_INCLUDES%
<<endif

#-------------------------------------------------------------------------------
# Libraries to be included during link operation
#-------------------------------------------------------------------------------
LIBS            := \
<<if hasSimpleLibsFilter
%SIMPLE_LIBS%
<<endif
<<if hasImportedLibsFilter
%IMPORTED_LIBS%
<<endif
<<if hasProjectLibsFilter
%PROJECT_LIBS%
<<endif
<<if hasPackagesLibsFilter
%PACKAGES_LIBS%
<<endif

LIBS            += \
%DEFAULT_SIMU_LIBS_PATH%/SimuConnect.lib \
%DEFAULT_SIMU_LIBS_PATH%/SimuDLLInterface.lib

#-------------------------------------------------------------------------------
# System libraries to be included during link operation
#-------------------------------------------------------------------------------
SYSTEM_LIBS     := \
-L %CPP_LIB_PATH% -lsupc++

#-------------------------------------------------------------------------------
# Result output files
#-------------------------------------------------------------------------------
# DLL file
DLL_FILE        := $(BIN_PATH)/$(TRG_FILE_NAME).dll

#-------------------------------------------------------------------------------
# Default compiler, linker, assembler options
#-------------------------------------------------------------------------------
# Default compiler options
CC_DEF_OPTS     := %DEFAULT_CC_OPTIONS%
# Default assembler options
AS_DEF_OPTS     := %DEFAULT_AS_OPTIONS%
# Default compiler options for link process
CC_LD_DEF_OPTS  := %DEFAULT_CC_LD_OPTIONS%

#-------------------------------------------------------------------------------
# Specific compiler, linker, assembler options
#-------------------------------------------------------------------------------
# Specific compiler options
CC_SPEC_OPTS    := %USER_CC_OPTIONS% %DEFAULT_DEFINE%
<<if hasPackagesDefinesFilter
CC_SPEC_OPTS    += %PACKAGES_DEFINES%
<<endif
CC_SPEC_OPTS    += %USER_DEFINES% $(INCLUDES_PATH)
# Specific assembler options
AS_SPEC_OPTS    := %USER_AS_OPTIONS% %DEFAULT_AS_DEFINE%
<<if hasPackagesDefinesFilter
AS_SPEC_OPTS    += %PACKAGES_AS_DEFINES%
<<endif
AS_SPEC_OPTS    += %USER_AS_DEFINES% $(INCLUDES_PATH)
# Specific compiler options for link process
CC_LD_SPEC_OPTS := %USER_CC_LD_OPTIONS%

#-------------------------------------------------------------------------------
# Compiler, linker, assembler options
# default + specific options
#-------------------------------------------------------------------------------
# Compiler options
CC_OPTS         := $(CC_DEF_OPTS) $(CC_SPEC_OPTS)
# Assembler options
AS_OPTS         := $(AS_DEF_OPTS) $(AS_SPEC_OPTS)
# Compiler options for link process
CC_LD_OPTS      := $(CC_LD_DEF_OPTS) $(CC_LD_SPEC_OPTS)

#-------------------------------------------------------------------------------
# SRC_OBJS is the list of the project object files
#-------------------------------------------------------------------------------
SRC_OBJS        := \
%USER_OBJECTS%

#-------------------------------------------------------------------------------
# Dependencies
#-------------------------------------------------------------------------------
DEPENDENCIES    := \
$(BUILD_FILES_PATH)/%MAKEFILE_FILE_NAME%

#===============================================================================
# Rule to make the project
#===============================================================================
#-------------------------------------------------------------------------------
# Rule for the DLL file generation
#-------------------------------------------------------------------------------
$(DLL_FILE): $(SRC_OBJS) $(LIBS)
	@$(PRINTF) "'$@' link in progress...\n"
	$(CC) $(CC_LD_OPTS) -o $@ $(SRC_OBJS) -Wl,-\( $(LIBS) -Wl,-\) $(SYSTEM_LIBS) $(VISUALC_OBJ_FILE)
ifeq "$(REMOVE_SYMBOLS)" "true"
	@$(PRINTF) "'$@' strip debug symbols in progress...\n"
	$(STRIP) $@ -o $(dir $@)/_$(notdir $@)
endif
	@$(PRINTF) "'$@' Win32 dll file generated.\n"

#===============================================================================
# Rule for the compilation process
#===============================================================================
%COMPILATION_RULES%
<<if hasProjectLibsFilter
#===============================================================================
# Rule use to call dependent project makefiles for build or clean operation
#===============================================================================
.PHONY: callProjectMakefileDependencies
callProjectMakefileDependencies:
%DEPENDENT_PROJECT_MAKEFILES_CALL_RULES%
<<endif
#===============================================================================
# Rule for project name and configuration name display
#===============================================================================
.PHONY: displayInfo
displayInfo:
	@$(PRINTF) "                                     *-*-*\n"
	@$(PRINTF) "--- Project '$(PROJECT_NAME)', Configuration '$(CFG_NAME)', Compiler '$(COMPILER_VERSION)' ---\n"

#===============================================================================
# Rule for build target progress info display
#===============================================================================
.PHONY: displayBuildInProgress
displayBuildInProgress:
	@$(PRINTF) "Build in progress...\n"

#===============================================================================
# Rule for output directories creation
#===============================================================================
.PHONY: createOutputDirs
createOutputDirs:
	@$(MKDIR) "$(OBJ_PATH)"
	@$(MKDIR) "$(BIN_PATH)"

#===============================================================================
# Make build rule
#===============================================================================
.PHONY: build
<<if hasProjectLibsFilter
build: callProjectMakefileDependencies displayInfo displayBuildInProgress createOutputDirs $(DLL_FILE)
<<else
build: displayInfo displayBuildInProgress createOutputDirs $(DLL_FILE)
<<endif
	@$(PRINTF) "done!\n"

#===============================================================================
# Make clean rule
#===============================================================================
.PHONY: clean
<<if hasProjectLibsFilter
clean: callProjectMakefileDependencies displayInfo
<<else
clean: displayInfo
<<endif
	@$(PRINTF) "deleting intermediate files...\n"
	@$(RM) "$(DLL_FILE)"
ifneq "$(wildcard $(OBJ_PATH)/*.*)" ""
	@$(RM) "$(OBJ_PATH)/*.*"
endif
	@$(PRINTF) "done!\n"
