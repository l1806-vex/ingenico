/**
 * \file EntryPoint_Tags.h
 * \brief Functions describing all the Entry Point tags.
 *
 *
 * \author Ingenico
 * \author Copyright (c) 2009 Ingenico, 1 rue claude Chappe,\n
 *		   07503 Guilherand-Granges, France, All Rights Reserved.
 *
 * \author	Ingenico has intellectual property rights relating to the technology embodied \n
 *			in this software. In particular, and without limitation, these intellectual property rights may\n
 *			include one or more patents.\n
 *			This software is distributed under licenses restricting its use, copying, distribution, and\n
 *			and decompilation. No part of this software may be reproduced in any form by any means\n
 *			without prior written authorization of Ingenico.
 **/

#ifndef __ENTRY_POINT_TAGS_H__INCLUDED__
#define __ENTRY_POINT_TAGS_H__INCLUDED__

/////////////////////////////////////////////////////////////////
//// Macros & preprocessor definitions //////////////////////////

//! \addtogroup EntryPointDefinedTags
//! @{

#define TAG_EP_CLESS_APPLI_CAPABILITY_TYPE			0x9F28			/*!< ENTRY POINT - Contactless Application Capabilities Type.<br>Identifies the capabilities of the application to the Terminal, for instance whether the application supports the EMV Contactless Application.<br>	- Format : b.<br>	- Length : 3-8 bytes.<br>	- Source : Card. */
#define TAG_EP_TERMINAL_TRANSACTION_QUALIFIERS		0x9F66			/*!< ENTRY POINT - Terminal Transaction Capabilities (Visa kernel only).<br>Indicates the Terminal requirements for online and CVM processing. Only applicable to the Visa kernel.<br>	- Format : b.<br>	- Length : 4 bytes.<br>	- Source : Terminal. */

//! @}


//! \addtogroup EntryPointInternalDefinition
//! @{

#define TAG_EP_AID_OPTIONS							0x9F928100		/*!< ENTRY POINT - Indicates the AID options :<br>	- Byte 1 :<br>		- Bit 1 : Indicates if partial AID is supported or not (not used by Entry Point).<br>		- Bit 2 : Indicates if status check supported or not.<br>		- Bit 3 : Indicates if zero amount is allowed or not.<br>		- Bit 4 : Indicates if this AID is allowed if no amount had been entered.<br>	- Bit 5 : Indicates if AID has not to be added if cardholder confirmation is required.<br>	- Bits 6 to 8 : RFU (shall be set to 0).<br>	- Byte 2 :<br>		- Bit 1 : Indicates if Entry Point method is allowed or not for this AID.<br>		- Bit 2 : Indicates if the "List Of AID" is allowed or not for this AID.<br>		- Bits 3 to 8 : RFU (shall be set to 0).<br>	- Bytes 3 to 4 : RFU (shall be set to 0). */
#define TAG_EP_KERNEL_TO_USE						0x9F928101		/*!< ENTRY POINT - Indicates the default kernel to use for a given AID. Please refer to \ref EntryPointPossibleKernels for possible values.<br>	- Format : b.<br>	- Length : 2 bytes.<br>	- Source : Terminal. */
#define TAG_EP_AID_ADDITIONAL_RESULTS				0x9F928104		/*!< ENTRY POINT - Contains the pre processing additional results for an AID (Exceeded floor limit, etc). Please refer to \ref T_PRE_PROCESSING_ADD_RESULT_AID structure for more information.<br>	- Format : b.<br>	- Length : 4 bytes.<br>	- Source : Terminal. */
#define TAG_EP_PPSE_CARD_RESPONSE					0x9F928105		/*!< ENTRY POINT - PPSE card response.<br>	- Format : b.<br>	- Length : var. up to 257 bytes.<br>	- Source : Terminal. */
#define TAG_EP_PPSE_STATUS_WORD						0x9F928106		/*!< ENTRY POINT - PPSE card response status word.<br>	- Format : b.<br>	- Length : 2 bytes.<br>	- Source : Terminal. */
#define TAG_EP_FINAL_SELECT_COMMAND_SENT			0x9F928107		/*!< ENTRY POINT - Final SELECT command sent to the card.<br>	- Format : b.<br>	- Length : var. up to 261 bytes.<br>	- Source : Terminal. */
#define TAG_EP_FINAL_SELECT_RESPONSE				0x9F928108		/*!< ENTRY POINT - Final SELECT card response.<br>	- Format : b.<br>	- Length : var. up to 257 bytes.<br>	- Source : Terminal. */
#define TAG_EP_FINAL_SELECT_STATUS_WORD				0x9F928109		/*!< ENTRY POINT - Final SELECT card response Status Word.<br>	- Format : b.<br>	- Length : 2 bytes.<br>	- Source : Terminal. */
#define TAG_EP_NUMBER_OF_ALLOWED_AID				0x9F92810A		/*!< ENTRY POINT - Number of allowed AID (according to the pre Entry Point processing results).<br>	- Format : b.<br>	- Length : 1 byte.<br>	- Source : Terminal. */
#define TAG_EP_ERROR_INFORMATION					0x9F92810B		/*!< ENTRY POINT - Indicates the error identifiers (if applicable). This consists of a concatenation of error codes. Each error code is coded on 8 bytes :<br>	- The four first bytes represent the error code identifier (please refer to \ref EntryPointErrorCodes for more information).<br>	- The four last bytes indicate the related tag (if applicable), else, it is filled with 0xFFFFFFFF.<br><br>	- Format : b.<br>	- Length : 8-128 bytes.<br>	- Source : Terminal. */
#define TAG_EP_UNPREDICTABLE_NUMBER					0x9F92810C		/*!< ENTRY POINT - Unpredictable number (generated by a scheme within Entry Point).<br>	- Format : b.<br>	- Length : 4 bytes.<br>	- Source : Terminal. */
#define TAG_EP_CLESS_TRANSACTION_LIMIT				0x9F92810D		/*!< ENTRY POINT - Indicates the limit for which contactless transaction can be conducted in the terminal relating to the AID.<br>	- Format : n.<br>	- Length : 6 bytes.<br>	- Source : Terminal. */
#define TAG_EP_CLESS_CVM_REQUIRED_LIMIT				0x9F92810E		/*!< ENTRY POINT - Indicates the contactless floor limit from which a CVM is required relating to an AID.<br>	- Format : n.<br>	- Length : 6 bytes.<br>	- Source : Terminal. */
#define TAG_EP_CLESS_FLOOR_LIMIT					0x9F92810F		/*!< ENTRY POINT - Indicates the maximum transaction amount relating to the AID.<br>	- Format : n.<br>	- Length : 6 bytes.<br>	- Source : Terminal. */
#define TAG_EP_NUMBER_OF_CANDIDATE_AID_IN_LIST		0x9F928110		/*!< ENTRY POINT - Indicates the number of AID available in the candidate list after the application selection process.<br>	- Format : b.<br>	- Length : 1 byte.<br>	- Source : Terminal. */
#define TAG_EP_APPLICATION_NAME						0x9F928111		/*!< ENTRY POINT - Indicates the Entry Point application name.<br>	- Format : anp.<br>	- Length : up to 32 bytes.<br>	- Source : Terminal. */
#define TAG_EP_APPLICATION_IDENTIFIER				0x9F928112		/*!< ENTRY POINT - Indicates the Entry Point application identifier (prefix shall be 3354xxxx).<br>	- Format : anp.<br>	- Length : 4 - 10 bytes.<br>	- Source : Terminal. */
#define TAG_EP_APPLICATION_CRC						0x9F928113		/*!< ENTRY POINT - Indicates the Entry Point application CRC.<br>	- Format : b.<br>	- Length : 2 bytes.<br>	- Source : Terminal. */
#define TAG_EP_AID_TERMINAL_PRIORITY				0x9F928114		/*!< ENTRY POINT - Indicates the Entry Point Terminal Priority for the Application Identifier.<br>	- Format : b.<br>	- Length : 1 bytes.<br>	- Source : Terminal. */
#define TAG_EP_AID_PRIORITY_FOR_KERNEL				0x9F928115		/*!< ENTRY POINT - Indicates the Priority for an AID (witch is managed by several kernel) in relation with this kernel .<br>	- Format : b.<br>	- Length : 1 bytes.<br>	- Source : Terminal. */

//! \cond
#define TAG_EP_TRANSACTION_WITH_NO_AMOUNT			0x9F928170		/*!< ENTRY POINT - Internal Ingenico tag. Do not use. */
#define TAG_EP_ALLOW_DUPLICATE_TAGS					0x9F928171		/*!< ENTRY POINT - Internal Ingenico tag. Do not use. */
//! \endcond

#define TAG_EP_AID_PRE_PROCESSING_RESULT			0xBF928101		/*!< ENTRY POINT - Constructed tag containing AID pre processing results (AID, Default kernel, proprietary data, application type, copy of TTQ and additional results).<br>	- Format : b.<br>	- Length : var. up to 80 bytes.<br>	- Source : Terminal. */
#define TAG_EP_AID_INFORMATION						0xBF928102		/*!< ENTRY POINT - Constructed tag containing all the AID information.<br>	- Format : b.<br>	- Length : var. up to 256 bytes.<br>	- Source : Terminal. */
#define TAG_EP_CANDIDATE_LIST_ELEMENT				0xBF928103		/*!< ENTRY POINT - Constructed tag containing a candidate list element.<br>	- Format : b.<br>	- Length : var. up to 512 bytes.<br>	- Source : Terminal. */

//! @}

//! \cond
#define EP_ALLOW_DUPLICATE_API                      0x01            /*!< ENTRY POINT - Defines the bit used in TAG_EP_ALLOW_DUPLICATE_TAGS tag to choose a EP allowing duplicate tags<i>Entry Point specification</i>. */
//! \endcond


//! \addtogroup EntryPointPossibleKernels
//! @{

#define DEFAULT_EP_KERNEL_JCB						0x0001			/*!< ENTRY POINT - Defines a JCB Kernel as indicated in the <i>Entry Point specification</i>. */
#define DEFAULT_EP_KERNEL_PAYPASS					0x0002			/*!< ENTRY POINT - Defines a PayPass Kernel as indicated in the <i>Entry Point specification</i>. */
#define DEFAULT_EP_KERNEL_VISA						0x0003			/*!< ENTRY POINT - Defines a Visa Kernel as indicated in the <i>Entry Point specification</i>. */
#define DEFAULT_EP_KERNEL_AMEX						0x0004			/*!< ENTRY POINT - Defines an American Express Kernel as indicated in the <i>Entry Point specification</i>. */
#define DEFAULT_EP_KERNEL_EMVCO						0x0101			/*!< ENTRY POINT - Defines a EMVCo kernel. */
#define DEFAULT_EP_KERNEL_DISCOVER					0x0102			/*!< ENTRY POINT - Defines a Discover kernel (outside of the EmvCo range as this has not been yet defined by EmvCo). */
#define DEFAULT_EP_KERNEL_INTERAC					0x0103			/*!< ENTRY POINT - Defines an Interac kernel (outside of the EmvCo range as this has not been yet defined by EmvCo). */
#define DEFAULT_EP_KERNEL_UNKNOWN					0xFFFF			/*!< ENTRY POINT - Unknown kernel. */

//! @}



/////////////////////////////////////////////////////////////////
//// Macros & preprocessor definitions //////////////////////////

//! \addtogroup EntryPoint_ExternalTypes
//! @{

//! \brief Type of a structure containing all the AID additional preprocessing results (flags) (content of \ref TAG_EP_AID_ADDITIONAL_RESULTS).
typedef struct
{
	int bClessFloorLimitExceeded : 1;						/*!< Indicates if Cless Floor limit is exceeded or not. */
	int bClessTransactionLimitExceeded : 1;					/*!< Indicates if Cless Transaction limit is exceeded or not. */
	int bClessCvmLimitExceeded : 1;							/*!< Indicates if Cless CVM floor limit is exceeded or not. */
	int bStatusCheckRequested : 1;							/*!< Indicates if status check is requested or not. */
	int bZeroAmount : 1;									/*!< Indicates if zero amount is used or not. */
	int bContactlessApplicationNotAllowed : 1;				/*!< Indicates if the AID is allowed for the cless transaction or not. */
	int bOther_RFU : 26;									/*!< Other bits ready for future use. */
} T_PRE_PROCESSING_ADD_RESULT_AID;

//! @}



#endif // __ENTRY_POINT_TAGS_H__INCLUDED__
