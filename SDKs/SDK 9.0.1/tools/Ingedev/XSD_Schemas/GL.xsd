<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified">
    <xs:include schemaLocation="DALdefines.xsd"/>
    <xs:include schemaLocation="widgetMappings.xsd"/>
    <xs:complexType name="BUTTON">
        <xs:annotation><xs:documentation>The button to command the terminal to perform some action, or to answer a question</xs:documentation></xs:annotation>
        <xs:all>
            <xs:element name="idname" type="IDNAMEREF" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>idname must respect the following naming convention: ${widgetMappingsImlRelativePath)#${IdName} where ${widgetMappingsImlRelativePath) is the relative path to the widgetMappings.iml file in the project, and ${IdName} is the widget identifier. The value of ${IdName} must be one of the "idname" attributes declared in the "widgetMappings.iml" file {IdName} must start with alpha character, and then any alphanumeric and '_' are allowed. The string must be unique in a GML file. Example: "../widgetMappings.iml#BUTTON_OK"</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="children" type="CHILDREN" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Children items attached to this widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="item" type="ITEM" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Location in the layout</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="grow" type="DIRECTION" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Indicates that the widget can be growed (only in case if it is placed in a layout)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="shrink" type="DIRECTION" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Indicates that the widget can be shrunk (only in case if it is placed in a layout)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="expand" type="DIRECTION" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Indicates that the widget can get as much space as possible (only in case if it is placed in a layout)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="backalign" type="ALIGN" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Alignment of the background relative to its parent</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="forealign" type="ALIGN" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Alignment of the foreground relative to the background</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="textalign" type="ALIGN" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Alignment of text in the widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="margins" type="MARGINS" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Margins around the widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="borders" type="BORDERS" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Borders around the widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="paddings" type="PADDINGS" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Text paddings in the widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="backcolor" type="COLOR" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Background color (0xAARRGGBB, AA=alpha, RR=red, GG=green, BB=blue)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="forecolor" type="COLOR" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Foreground or text color (0xAARRGGBB, AA=alpha, RR=red, GG=green, BB=blue)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="shortcut" type="TELIUMKEY" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Keyboard shortcut to a widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="visible" type="BOOL" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Indicates if the object is visible (true) or not (false)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="state" type="STATE" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>State of the widget has its creation</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="statemask" type="STATE" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Mask on the state, the widget will be visible only when the state is identical to the mask defined</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="focusable" type="BOOL" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Indicates that the widget can receive focus (true/false)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="clickable" type="BOOL" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Indicates that the widget sends a click event (true/false)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="clicksensitive" type="BOOL" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Indicates that this widget is sensitive pen click (true/false)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="position" type="POSITION" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Position of widget in its parent (WARNING : if it set the widget will be removed from its parent layout)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="size" type="SIZE" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Size of the widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="maxsize" type="SIZE" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Maximal size of the widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="minsize" type="SIZE" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Minimal size of the widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="text" type="xs:string" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Text displayed on the widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="font" type="FONT" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Font used in display of text</xs:documentation></xs:annotation>
            </xs:element>
        </xs:all>
    </xs:complexType>
    <xs:complexType name="CHECKBUTTON">
        <xs:annotation><xs:documentation>A check button is an option button that can be switched on (checked) or off (unchecked)</xs:documentation></xs:annotation>
        <xs:all>
            <xs:element name="idname" type="IDNAMEREF" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>idname must respect the following naming convention: ${widgetMappingsImlRelativePath)#${IdName} where ${widgetMappingsImlRelativePath) is the relative path to the widgetMappings.iml file in the project, and ${IdName} is the widget identifier. The value of ${IdName} must be one of the "idname" attributes declared in the "widgetMappings.iml" file {IdName} must start with alpha character, and then any alphanumeric and '_' are allowed. The string must be unique in a GML file. Example: "../widgetMappings.iml#BUTTON_OK"</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="children" type="CHILDREN" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Children items attached to this widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="item" type="ITEM" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Location in the layout</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="grow" type="DIRECTION" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Indicates that the widget can be growed (only in case if it is placed in a layout)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="shrink" type="DIRECTION" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Indicates that the widget can be shrunk (only in case if it is placed in a layout)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="expand" type="DIRECTION" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Indicates that the widget can get as much space as possible (only in case if it is placed in a layout)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="backalign" type="ALIGN" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Alignment of the background relative to its parent</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="forealign" type="ALIGN" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Alignment of the foreground relative to the background</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="textalign" type="ALIGN" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Alignment of text in the widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="margins" type="MARGINS" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Margins around the widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="borders" type="BORDERS" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Borders around the widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="paddings" type="PADDINGS" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Text paddings in the widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="backcolor" type="COLOR" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Background color (0xAARRGGBB, AA=alpha, RR=red, GG=green, BB=blue)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="forecolor" type="COLOR" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Foreground or text color (0xAARRGGBB, AA=alpha, RR=red, GG=green, BB=blue)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="shortcut" type="TELIUMKEY" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Keyboard shortcut to a widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="visible" type="BOOL" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Indicates if the object is visible (true) or not (false)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="state" type="STATE" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>State of the widget has its creation</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="statemask" type="STATE" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Mask on the state, the widget will be visible only when the state is identical to the mask defined</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="focusable" type="BOOL" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Indicates that the widget can receive focus (true/false)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="clickable" type="BOOL" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Indicates that the widget sends a click event (true/false)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="clicksensitive" type="BOOL" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Indicates that this widget is sensitive pen click (true/false)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="position" type="POSITION" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Position of widget in its parent (WARNING : if it set the widget will be removed from its parent layout)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="size" type="SIZE" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Size of the widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="maxsize" type="SIZE" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Maximal size of the widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="minsize" type="SIZE" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Minimal size of the widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="text" type="xs:string" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Text displayed on the widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="font" type="FONT" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Font used in display of text</xs:documentation></xs:annotation>
            </xs:element>
        </xs:all>
    </xs:complexType>
    <xs:complexType name="DOCUMENT">
        <xs:annotation><xs:documentation>The document allows the print of a document</xs:documentation></xs:annotation>
        <xs:all>
            <xs:element name="idname" type="IDNAMEREF" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>idname must respect the following naming convention: ${widgetMappingsImlRelativePath)#${IdName} where ${widgetMappingsImlRelativePath) is the relative path to the widgetMappings.iml file in the project, and ${IdName} is the widget identifier. The value of ${IdName} must be one of the "idname" attributes declared in the "widgetMappings.iml" file {IdName} must start with alpha character, and then any alphanumeric and '_' are allowed. The string must be unique in a GML file. Example: "../widgetMappings.iml#BUTTON_OK"</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="children" type="CHILDREN" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Children items attached to this widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="item" type="ITEM" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Location in the layout</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="grow" type="DIRECTION" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Indicates that the widget can be growed (only in case if it is placed in a layout)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="shrink" type="DIRECTION" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Indicates that the widget can be shrunk (only in case if it is placed in a layout)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="expand" type="DIRECTION" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Indicates that the widget can get as much space as possible (only in case if it is placed in a layout)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="backalign" type="ALIGN" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Alignment of the background relative to its parent</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="forealign" type="ALIGN" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Alignment of the foreground relative to the background</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="textalign" type="ALIGN" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Alignment of text in the widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="margins" type="MARGINS" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Margins around the widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="borders" type="BORDERS" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Borders around the widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="paddings" type="PADDINGS" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Text paddings in the widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="backcolor" type="COLOR" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Background color (0xAARRGGBB, AA=alpha, RR=red, GG=green, BB=blue)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="forecolor" type="COLOR" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Foreground or text color (0xAARRGGBB, AA=alpha, RR=red, GG=green, BB=blue)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="shortcut" type="TELIUMKEY" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Keyboard shortcut to a widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="visible" type="BOOL" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Indicates if the object is visible (true) or not (false)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="state" type="STATE" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>State of the widget has its creation</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="statemask" type="STATE" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Mask on the state, the widget will be visible only when the state is identical to the mask defined</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="focusable" type="BOOL" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Indicates that the widget can receive focus (true/false)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="clickable" type="BOOL" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Indicates that the widget sends a click event (true/false)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="clicksensitive" type="BOOL" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Indicates that this widget is sensitive pen click (true/false)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="position" type="POSITION" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Position of widget in its parent (WARNING : if it set the widget will be removed from its parent layout)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="size" type="SIZE" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Size of the widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="maxsize" type="SIZE" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Maximal size of the widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="minsize" type="SIZE" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Minimal size of the widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="showonscreen" type="BOOL" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Displays the document on the screen</xs:documentation></xs:annotation>
            </xs:element>
        </xs:all>
    </xs:complexType>
    <xs:complexType name="ACTIONPEN">
        <xs:annotation><xs:documentation>Define the pen</xs:documentation></xs:annotation>
        <xs:all>
            <xs:element name="color" type="COLOR" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Pen color  (0xAARRGGBB, AA=alpha, RR=red, GG=green, BB=blue) coded decimal</xs:documentation></xs:annotation>
            </xs:element>
        </xs:all>
    </xs:complexType>
    <xs:complexType name="ACTIONBRUSH">
        <xs:annotation><xs:documentation>Define the brush</xs:documentation></xs:annotation>
        <xs:all>
            <xs:element name="color" type="COLOR" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>brush color  (0xAARRGGBB, AA=alpha, RR=red, GG=green, BB=blue) coded decimal</xs:documentation></xs:annotation>
            </xs:element>
        </xs:all>
    </xs:complexType>
    <xs:complexType name="ACTIONFONT">
        <xs:annotation><xs:documentation>Define the font action</xs:documentation></xs:annotation>
        <xs:all>
            <xs:element name="font" type="FONT" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Font definition</xs:documentation></xs:annotation>
            </xs:element>
        </xs:all>
    </xs:complexType>
    <xs:complexType name="ACTIONTEXT">
        <xs:annotation><xs:documentation>Define the text action</xs:documentation></xs:annotation>
        <xs:all>
            <xs:element name="position" type="POSITION" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Position of text</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="text" type="xs:string" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Text to display</xs:documentation></xs:annotation>
            </xs:element>
        </xs:all>
    </xs:complexType>
    <xs:complexType name="ACTIONRECT">
        <xs:annotation><xs:documentation>Define the rectangle action</xs:documentation></xs:annotation>
        <xs:all>
            <xs:element name="position" type="POSITION" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Position of rectangle</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="size" type="SIZE" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Size of rectangle</xs:documentation></xs:annotation>
            </xs:element>
        </xs:all>
    </xs:complexType>
    <xs:complexType name="ACTIONELLIPSE">
        <xs:annotation><xs:documentation>Define the ellipse action</xs:documentation></xs:annotation>
        <xs:all>
            <xs:element name="position" type="POSITION" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Position of center </xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="radius" type="SIZE" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Radius</xs:documentation></xs:annotation>
            </xs:element>
        </xs:all>
    </xs:complexType>
    <xs:complexType name="ACTIONPIE">
        <xs:annotation><xs:documentation>Define the pie action</xs:documentation></xs:annotation>
        <xs:all>
            <xs:element name="position" type="POSITION" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Position of center </xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="radius" type="SIZE" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Radius</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="angle1" type="xs:integer" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Start of arc in 64ths of a degree (anticlockwise from the x axis)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="angle2" type="xs:integer" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>End of arc in 64ths of a degree (anticlockwise from the x axis)</xs:documentation></xs:annotation>
            </xs:element>
        </xs:all>
    </xs:complexType>
    <xs:complexType name="ACTIONLINE">
        <xs:annotation><xs:documentation>Define the line action</xs:documentation></xs:annotation>
        <xs:all>
            <xs:element name="point1" type="POSITION" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>First point of line</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="point2" type="POSITION" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Second point of line</xs:documentation></xs:annotation>
            </xs:element>
        </xs:all>
    </xs:complexType>
    <xs:complexType name="ACTIONIMAGE">
        <xs:annotation><xs:documentation>Define the image action</xs:documentation></xs:annotation>
        <xs:all>
            <xs:element name="source" type="SOURCEFILE" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Filename of the image (file name can contain alphanumeric, underscore, minus, spaces characters)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="position" type="POSITION" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Destination position of image</xs:documentation></xs:annotation>
            </xs:element>
        </xs:all>
    </xs:complexType>
    <xs:complexType name="ACTIONSTRETCH">
        <xs:annotation><xs:documentation>Define the stretch image action</xs:documentation></xs:annotation>
        <xs:all>
            <xs:element name="source" type="SOURCEFILE" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Filename of the image (file name can contain alphanumeric, underscore, minus, spaces characters)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="position" type="POSITION" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Destination position of image</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="size" type="SIZE" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Destination size of image</xs:documentation></xs:annotation>
            </xs:element>
        </xs:all>
    </xs:complexType>
    <xs:complexType name="ACTIONPOLYGON">
        <xs:annotation><xs:documentation>Define the polygon action</xs:documentation></xs:annotation>
        <xs:choice maxOccurs="unbounded">
            <xs:element name="points" type="POSITION" minOccurs="0" maxOccurs="unbounded">
                <xs:annotation><xs:documentation>List of points</xs:documentation></xs:annotation>
            </xs:element>
        </xs:choice>
    </xs:complexType>
    <xs:complexType name="ACTIONS">
        <xs:annotation><xs:documentation>List of drawing actions</xs:documentation></xs:annotation>
        <xs:choice maxOccurs="unbounded">
            <xs:element name="actionpen" type="ACTIONPEN">
                <xs:annotation><xs:documentation>Define the pen</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="actionbrush" type="ACTIONBRUSH">
                <xs:annotation><xs:documentation>Define the brush</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="actionfont" type="ACTIONFONT">
                <xs:annotation><xs:documentation>Define the font action</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="actiontext" type="ACTIONTEXT">
                <xs:annotation><xs:documentation>Define the text action</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="actionrect" type="ACTIONRECT">
                <xs:annotation><xs:documentation>Define the rectangle action</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="actionellipse" type="ACTIONELLIPSE">
                <xs:annotation><xs:documentation>Define the ellipse action</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="actionpie" type="ACTIONPIE">
                <xs:annotation><xs:documentation>Define the pie action</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="actionline" type="ACTIONLINE">
                <xs:annotation><xs:documentation>Define the line action</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="actionimage" type="ACTIONIMAGE">
                <xs:annotation><xs:documentation>Define the image action</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="actionstretch" type="ACTIONSTRETCH">
                <xs:annotation><xs:documentation>Define the stretch image action</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="actionpolygon" type="ACTIONPOLYGON">
                <xs:annotation><xs:documentation>Define the polygon action</xs:documentation></xs:annotation>
            </xs:element>
        </xs:choice>
    </xs:complexType>
    <xs:complexType name="DRAWING">
        <xs:annotation><xs:documentation>the drawing widget is a surface on which the user can draw a graph</xs:documentation></xs:annotation>
        <xs:choice maxOccurs="unbounded">
            <xs:element name="idname" type="IDNAMEREF" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>idname must respect the following naming convention: ${widgetMappingsImlRelativePath)#${IdName} where ${widgetMappingsImlRelativePath) is the relative path to the widgetMappings.iml file in the project, and ${IdName} is the widget identifier. The value of ${IdName} must be one of the "idname" attributes declared in the "widgetMappings.iml" file {IdName} must start with alpha character, and then any alphanumeric and '_' are allowed. The string must be unique in a GML file. Example: "../widgetMappings.iml#BUTTON_OK"</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="children" type="CHILDREN" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Children items attached to this widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="item" type="ITEM" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Location in the layout</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="grow" type="DIRECTION" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Indicates that the widget can be growed (only in case if it is placed in a layout)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="shrink" type="DIRECTION" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Indicates that the widget can be shrunk (only in case if it is placed in a layout)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="expand" type="DIRECTION" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Indicates that the widget can get as much space as possible (only in case if it is placed in a layout)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="backalign" type="ALIGN" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Alignment of the background relative to its parent</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="forealign" type="ALIGN" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Alignment of the foreground relative to the background</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="textalign" type="ALIGN" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Alignment of text in the widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="margins" type="MARGINS" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Margins around the widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="borders" type="BORDERS" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Borders around the widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="paddings" type="PADDINGS" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Text paddings in the widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="backcolor" type="COLOR" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Background color (0xAARRGGBB, AA=alpha, RR=red, GG=green, BB=blue)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="forecolor" type="COLOR" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Foreground or text color (0xAARRGGBB, AA=alpha, RR=red, GG=green, BB=blue)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="shortcut" type="TELIUMKEY" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Keyboard shortcut to a widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="visible" type="BOOL" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Indicates if the object is visible (true) or not (false)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="state" type="STATE" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>State of the widget has its creation</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="statemask" type="STATE" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Mask on the state, the widget will be visible only when the state is identical to the mask defined</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="focusable" type="BOOL" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Indicates that the widget can receive focus (true/false)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="clickable" type="BOOL" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Indicates that the widget sends a click event (true/false)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="clicksensitive" type="BOOL" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Indicates that this widget is sensitive pen click (true/false)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="position" type="POSITION" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Position of widget in its parent (WARNING : if it set the widget will be removed from its parent layout)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="size" type="SIZE" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Size of the widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="maxsize" type="SIZE" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Maximal size of the widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="minsize" type="SIZE" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Minimal size of the widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="actions" type="ACTIONS" minOccurs="0" maxOccurs="unbounded">
                <xs:annotation><xs:documentation>Drawing actions</xs:documentation></xs:annotation>
            </xs:element>
        </xs:choice>
    </xs:complexType>
    <xs:complexType name="EDIT">
        <xs:annotation><xs:documentation>The edit widget provides a widget that is used to edit a single line of text.</xs:documentation></xs:annotation>
        <xs:all>
            <xs:element name="idname" type="IDNAMEREF" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>idname must respect the following naming convention: ${widgetMappingsImlRelativePath)#${IdName} where ${widgetMappingsImlRelativePath) is the relative path to the widgetMappings.iml file in the project, and ${IdName} is the widget identifier. The value of ${IdName} must be one of the "idname" attributes declared in the "widgetMappings.iml" file {IdName} must start with alpha character, and then any alphanumeric and '_' are allowed. The string must be unique in a GML file. Example: "../widgetMappings.iml#BUTTON_OK"</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="children" type="CHILDREN" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Children items attached to this widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="item" type="ITEM" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Location in the layout</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="grow" type="DIRECTION" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Indicates that the widget can be growed (only in case if it is placed in a layout)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="shrink" type="DIRECTION" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Indicates that the widget can be shrunk (only in case if it is placed in a layout)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="expand" type="DIRECTION" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Indicates that the widget can get as much space as possible (only in case if it is placed in a layout)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="backalign" type="ALIGN" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Alignment of the background relative to its parent</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="forealign" type="ALIGN" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Alignment of the foreground relative to the background</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="textalign" type="ALIGN" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Alignment of text in the widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="margins" type="MARGINS" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Margins around the widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="borders" type="BORDERS" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Borders around the widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="paddings" type="PADDINGS" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Text paddings in the widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="backcolor" type="COLOR" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Background color (0xAARRGGBB, AA=alpha, RR=red, GG=green, BB=blue)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="forecolor" type="COLOR" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Foreground or text color (0xAARRGGBB, AA=alpha, RR=red, GG=green, BB=blue)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="shortcut" type="TELIUMKEY" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Keyboard shortcut to a widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="visible" type="BOOL" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Indicates if the object is visible (true) or not (false)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="state" type="STATE" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>State of the widget has its creation</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="statemask" type="STATE" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Mask on the state, the widget will be visible only when the state is identical to the mask defined</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="focusable" type="BOOL" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Indicates that the widget can receive focus (true/false)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="clickable" type="BOOL" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Indicates that the widget sends a click event (true/false)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="clicksensitive" type="BOOL" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Indicates that this widget is sensitive pen click (true/false)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="position" type="POSITION" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Position of widget in its parent (WARNING : if it set the widget will be removed from its parent layout)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="size" type="SIZE" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Size of the widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="maxsize" type="SIZE" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Maximal size of the widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="minsize" type="SIZE" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Minimal size of the widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="text" type="xs:string" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Text displayed on the widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="font" type="FONT" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Font used in display of text</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="fillchar1" type="xs:string" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Sets the default fill character 1 (This character appears only in fields with an input mask defined)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="fillchar2" type="xs:string" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Sets the default fill character 2 (This character appears only in fields with an input mask defined)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="passwordchar" type="xs:string" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Sets the default password character (This character appears only in fields with an input mask defined)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="mode" type="INPUTMODE" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Configure the input mode</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="mask" type="xs:string" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>mask string handle, see 'Mask properties' in the documentation</xs:documentation></xs:annotation>
            </xs:element>
        </xs:all>
    </xs:complexType>
    <xs:complexType name="GOAL">
        <xs:choice maxOccurs="unbounded">
            <xs:element name="window" type="WINDOW" minOccurs="0" maxOccurs="1">
            <xs:unique name="idname-must-be-unique-in-window">
            <xs:selector xpath=".//*"></xs:selector>
            <xs:field xpath="idname"></xs:field>
            </xs:unique>
            </xs:element>
            <xs:element name="document" type="DOCUMENT" minOccurs="0" maxOccurs="1">
            <xs:unique name="idname-must-be-unique-in-document">
            <xs:selector xpath=".//*"></xs:selector>
            <xs:field xpath="idname"></xs:field>
            </xs:unique>
            </xs:element>
        </xs:choice>
        <xs:attribute name="name" type="dalnametype"></xs:attribute>
    </xs:complexType>
    <xs:element name="goal" type="GOAL" >
        <xs:annotation><xs:documentation>Top element</xs:documentation></xs:annotation>
    </xs:element>
    <xs:complexType name="HSCROLLBAR">
        <xs:annotation><xs:documentation>A scroll bar is a control that enables the user to access parts of a document that is larger than the widget used to display it</xs:documentation></xs:annotation>
        <xs:all>
            <xs:element name="idname" type="IDNAMEREF" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>idname must respect the following naming convention: ${widgetMappingsImlRelativePath)#${IdName} where ${widgetMappingsImlRelativePath) is the relative path to the widgetMappings.iml file in the project, and ${IdName} is the widget identifier. The value of ${IdName} must be one of the "idname" attributes declared in the "widgetMappings.iml" file {IdName} must start with alpha character, and then any alphanumeric and '_' are allowed. The string must be unique in a GML file. Example: "../widgetMappings.iml#BUTTON_OK"</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="children" type="CHILDREN" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Children items attached to this widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="item" type="ITEM" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Location in the layout</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="grow" type="DIRECTION" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Indicates that the widget can be growed (only in case if it is placed in a layout)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="shrink" type="DIRECTION" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Indicates that the widget can be shrunk (only in case if it is placed in a layout)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="expand" type="DIRECTION" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Indicates that the widget can get as much space as possible (only in case if it is placed in a layout)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="backalign" type="ALIGN" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Alignment of the background relative to its parent</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="forealign" type="ALIGN" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Alignment of the foreground relative to the background</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="textalign" type="ALIGN" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Alignment of text in the widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="margins" type="MARGINS" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Margins around the widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="borders" type="BORDERS" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Borders around the widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="paddings" type="PADDINGS" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Text paddings in the widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="backcolor" type="COLOR" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Background color (0xAARRGGBB, AA=alpha, RR=red, GG=green, BB=blue)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="forecolor" type="COLOR" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Foreground or text color (0xAARRGGBB, AA=alpha, RR=red, GG=green, BB=blue)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="shortcut" type="TELIUMKEY" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Keyboard shortcut to a widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="visible" type="BOOL" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Indicates if the object is visible (true) or not (false)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="state" type="STATE" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>State of the widget has its creation</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="statemask" type="STATE" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Mask on the state, the widget will be visible only when the state is identical to the mask defined</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="focusable" type="BOOL" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Indicates that the widget can receive focus (true/false)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="clickable" type="BOOL" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Indicates that the widget sends a click event (true/false)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="clicksensitive" type="BOOL" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Indicates that this widget is sensitive pen click (true/false)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="position" type="POSITION" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Position of widget in its parent (WARNING : if it set the widget will be removed from its parent layout)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="size" type="SIZE" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Size of the widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="maxsize" type="SIZE" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Maximal size of the widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="minsize" type="SIZE" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Minimal size of the widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="range" type="RANGE" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Range</xs:documentation></xs:annotation>
            </xs:element>
        </xs:all>
    </xs:complexType>
    <xs:complexType name="HSLIDER">
        <xs:annotation><xs:documentation>The slider is the classic widget for controlling a bounded value. It lets the user move a slider handle along groove and translates the handle's position into an integer value within the legal range</xs:documentation></xs:annotation>
        <xs:all>
            <xs:element name="idname" type="IDNAMEREF" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>idname must respect the following naming convention: ${widgetMappingsImlRelativePath)#${IdName} where ${widgetMappingsImlRelativePath) is the relative path to the widgetMappings.iml file in the project, and ${IdName} is the widget identifier. The value of ${IdName} must be one of the "idname" attributes declared in the "widgetMappings.iml" file {IdName} must start with alpha character, and then any alphanumeric and '_' are allowed. The string must be unique in a GML file. Example: "../widgetMappings.iml#BUTTON_OK"</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="children" type="CHILDREN" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Children items attached to this widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="item" type="ITEM" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Location in the layout</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="grow" type="DIRECTION" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Indicates that the widget can be growed (only in case if it is placed in a layout)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="shrink" type="DIRECTION" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Indicates that the widget can be shrunk (only in case if it is placed in a layout)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="expand" type="DIRECTION" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Indicates that the widget can get as much space as possible (only in case if it is placed in a layout)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="backalign" type="ALIGN" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Alignment of the background relative to its parent</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="forealign" type="ALIGN" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Alignment of the foreground relative to the background</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="textalign" type="ALIGN" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Alignment of text in the widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="margins" type="MARGINS" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Margins around the widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="borders" type="BORDERS" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Borders around the widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="paddings" type="PADDINGS" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Text paddings in the widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="backcolor" type="COLOR" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Background color (0xAARRGGBB, AA=alpha, RR=red, GG=green, BB=blue)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="forecolor" type="COLOR" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Foreground or text color (0xAARRGGBB, AA=alpha, RR=red, GG=green, BB=blue)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="shortcut" type="TELIUMKEY" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Keyboard shortcut to a widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="visible" type="BOOL" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Indicates if the object is visible (true) or not (false)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="state" type="STATE" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>State of the widget has its creation</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="statemask" type="STATE" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Mask on the state, the widget will be visible only when the state is identical to the mask defined</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="focusable" type="BOOL" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Indicates that the widget can receive focus (true/false)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="clickable" type="BOOL" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Indicates that the widget sends a click event (true/false)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="clicksensitive" type="BOOL" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Indicates that this widget is sensitive pen click (true/false)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="position" type="POSITION" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Position of widget in its parent (WARNING : if it set the widget will be removed from its parent layout)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="size" type="SIZE" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Size of the widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="maxsize" type="SIZE" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Maximal size of the widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="minsize" type="SIZE" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Minimal size of the widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="range" type="RANGE" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Range</xs:documentation></xs:annotation>
            </xs:element>
        </xs:all>
    </xs:complexType>
    <xs:complexType name="ICON">
        <xs:annotation><xs:documentation>The class icon is equivalent to a button, it allows the display of an image more</xs:documentation></xs:annotation>
        <xs:all>
            <xs:element name="idname" type="IDNAMEREF" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>idname must respect the following naming convention: ${widgetMappingsImlRelativePath)#${IdName} where ${widgetMappingsImlRelativePath) is the relative path to the widgetMappings.iml file in the project, and ${IdName} is the widget identifier. The value of ${IdName} must be one of the "idname" attributes declared in the "widgetMappings.iml" file {IdName} must start with alpha character, and then any alphanumeric and '_' are allowed. The string must be unique in a GML file. Example: "../widgetMappings.iml#BUTTON_OK"</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="children" type="CHILDREN" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Children items attached to this widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="item" type="ITEM" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Location in the layout</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="grow" type="DIRECTION" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Indicates that the widget can be growed (only in case if it is placed in a layout)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="shrink" type="DIRECTION" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Indicates that the widget can be shrunk (only in case if it is placed in a layout)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="expand" type="DIRECTION" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Indicates that the widget can get as much space as possible (only in case if it is placed in a layout)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="backalign" type="ALIGN" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Alignment of the background relative to its parent</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="forealign" type="ALIGN" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Alignment of the foreground relative to the background</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="textalign" type="ALIGN" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Alignment of text in the widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="margins" type="MARGINS" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Margins around the widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="borders" type="BORDERS" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Borders around the widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="paddings" type="PADDINGS" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Text paddings in the widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="backcolor" type="COLOR" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Background color (0xAARRGGBB, AA=alpha, RR=red, GG=green, BB=blue)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="forecolor" type="COLOR" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Foreground or text color (0xAARRGGBB, AA=alpha, RR=red, GG=green, BB=blue)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="shortcut" type="TELIUMKEY" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Keyboard shortcut to a widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="visible" type="BOOL" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Indicates if the object is visible (true) or not (false)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="state" type="STATE" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>State of the widget has its creation</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="statemask" type="STATE" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Mask on the state, the widget will be visible only when the state is identical to the mask defined</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="focusable" type="BOOL" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Indicates that the widget can receive focus (true/false)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="clickable" type="BOOL" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Indicates that the widget sends a click event (true/false)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="clicksensitive" type="BOOL" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Indicates that this widget is sensitive pen click (true/false)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="position" type="POSITION" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Position of widget in its parent (WARNING : if it set the widget will be removed from its parent layout)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="size" type="SIZE" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Size of the widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="maxsize" type="SIZE" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Maximal size of the widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="minsize" type="SIZE" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Minimal size of the widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="source" type="SOURCEFILE" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Image source (file name can contain alphanumeric, underscore, minus, spaces characters)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="text" type="xs:string" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Text displayed on the widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="font" type="FONT" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Font used in display of text</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="transformation" type="TRANSFORMATION" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Image transformation</xs:documentation></xs:annotation>
            </xs:element>
        </xs:all>
    </xs:complexType>
    <xs:complexType name="ICONBUTTON">
        <xs:annotation><xs:documentation>The class icon button is equivalent to a button with an icon, it allows the display of an image more</xs:documentation></xs:annotation>
        <xs:all>
            <xs:element name="idname" type="IDNAMEREF" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>idname must respect the following naming convention: ${widgetMappingsImlRelativePath)#${IdName} where ${widgetMappingsImlRelativePath) is the relative path to the widgetMappings.iml file in the project, and ${IdName} is the widget identifier. The value of ${IdName} must be one of the "idname" attributes declared in the "widgetMappings.iml" file {IdName} must start with alpha character, and then any alphanumeric and '_' are allowed. The string must be unique in a GML file. Example: "../widgetMappings.iml#BUTTON_OK"</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="children" type="CHILDREN" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Children items attached to this widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="item" type="ITEM" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Location in the layout</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="grow" type="DIRECTION" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Indicates that the widget can be growed (only in case if it is placed in a layout)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="shrink" type="DIRECTION" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Indicates that the widget can be shrunk (only in case if it is placed in a layout)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="expand" type="DIRECTION" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Indicates that the widget can get as much space as possible (only in case if it is placed in a layout)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="backalign" type="ALIGN" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Alignment of the background relative to its parent</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="forealign" type="ALIGN" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Alignment of the foreground relative to the background</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="textalign" type="ALIGN" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Alignment of text in the widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="margins" type="MARGINS" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Margins around the widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="borders" type="BORDERS" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Borders around the widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="paddings" type="PADDINGS" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Text paddings in the widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="backcolor" type="COLOR" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Background color (0xAARRGGBB, AA=alpha, RR=red, GG=green, BB=blue)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="forecolor" type="COLOR" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Foreground or text color (0xAARRGGBB, AA=alpha, RR=red, GG=green, BB=blue)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="shortcut" type="TELIUMKEY" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Keyboard shortcut to a widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="visible" type="BOOL" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Indicates if the object is visible (true) or not (false)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="state" type="STATE" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>State of the widget has its creation</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="statemask" type="STATE" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Mask on the state, the widget will be visible only when the state is identical to the mask defined</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="focusable" type="BOOL" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Indicates that the widget can receive focus (true/false)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="clickable" type="BOOL" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Indicates that the widget sends a click event (true/false)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="clicksensitive" type="BOOL" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Indicates that this widget is sensitive pen click (true/false)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="position" type="POSITION" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Position of widget in its parent (WARNING : if it set the widget will be removed from its parent layout)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="size" type="SIZE" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Size of the widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="maxsize" type="SIZE" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Maximal size of the widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="minsize" type="SIZE" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Minimal size of the widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="source" type="SOURCEFILE" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Image source (file name can contain alphanumeric, underscore, minus, spaces characters)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="text" type="xs:string" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Text displayed on the widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="font" type="FONT" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Font used in display of text</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="transformation" type="TRANSFORMATION" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Image transformation</xs:documentation></xs:annotation>
            </xs:element>
        </xs:all>
    </xs:complexType>
    <xs:complexType name="LABEL">
        <xs:annotation><xs:documentation>This class is used to display text on a line or a multi-line text</xs:documentation></xs:annotation>
        <xs:all>
            <xs:element name="idname" type="IDNAMEREF" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>idname must respect the following naming convention: ${widgetMappingsImlRelativePath)#${IdName} where ${widgetMappingsImlRelativePath) is the relative path to the widgetMappings.iml file in the project, and ${IdName} is the widget identifier. The value of ${IdName} must be one of the "idname" attributes declared in the "widgetMappings.iml" file {IdName} must start with alpha character, and then any alphanumeric and '_' are allowed. The string must be unique in a GML file. Example: "../widgetMappings.iml#BUTTON_OK"</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="children" type="CHILDREN" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Children items attached to this widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="item" type="ITEM" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Location in the layout</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="grow" type="DIRECTION" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Indicates that the widget can be growed (only in case if it is placed in a layout)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="shrink" type="DIRECTION" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Indicates that the widget can be shrunk (only in case if it is placed in a layout)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="expand" type="DIRECTION" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Indicates that the widget can get as much space as possible (only in case if it is placed in a layout)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="backalign" type="ALIGN" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Alignment of the background relative to its parent</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="forealign" type="ALIGN" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Alignment of the foreground relative to the background</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="textalign" type="ALIGN" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Alignment of text in the widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="margins" type="MARGINS" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Margins around the widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="borders" type="BORDERS" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Borders around the widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="paddings" type="PADDINGS" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Text paddings in the widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="backcolor" type="COLOR" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Background color (0xAARRGGBB, AA=alpha, RR=red, GG=green, BB=blue)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="forecolor" type="COLOR" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Foreground or text color (0xAARRGGBB, AA=alpha, RR=red, GG=green, BB=blue)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="shortcut" type="TELIUMKEY" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Keyboard shortcut to a widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="visible" type="BOOL" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Indicates if the object is visible (true) or not (false)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="state" type="STATE" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>State of the widget has its creation</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="statemask" type="STATE" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Mask on the state, the widget will be visible only when the state is identical to the mask defined</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="focusable" type="BOOL" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Indicates that the widget can receive focus (true/false)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="clickable" type="BOOL" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Indicates that the widget sends a click event (true/false)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="clicksensitive" type="BOOL" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Indicates that this widget is sensitive pen click (true/false)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="position" type="POSITION" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Position of widget in its parent (WARNING : if it set the widget will be removed from its parent layout)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="size" type="SIZE" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Size of the widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="maxsize" type="SIZE" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Maximal size of the widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="minsize" type="SIZE" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Minimal size of the widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="text" type="xs:string" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Text displayed on the widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="font" type="FONT" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Font used in display of text</xs:documentation></xs:annotation>
            </xs:element>
        </xs:all>
    </xs:complexType>
    <xs:complexType name="LAYOUT">
        <xs:annotation><xs:documentation>The layout can be viewed as a table with multiple rows and columns to place widgets</xs:documentation></xs:annotation>
        <xs:all>
            <xs:element name="idname" type="IDNAMEREF" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>idname must respect the following naming convention: ${widgetMappingsImlRelativePath)#${IdName} where ${widgetMappingsImlRelativePath) is the relative path to the widgetMappings.iml file in the project, and ${IdName} is the widget identifier. The value of ${IdName} must be one of the "idname" attributes declared in the "widgetMappings.iml" file {IdName} must start with alpha character, and then any alphanumeric and '_' are allowed. The string must be unique in a GML file. Example: "../widgetMappings.iml#BUTTON_OK"</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="children" type="CHILDREN" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Children items attached to this widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="item" type="ITEM" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Location in the layout</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="grow" type="DIRECTION" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Indicates that the widget can be growed (only in case if it is placed in a layout)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="shrink" type="DIRECTION" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Indicates that the widget can be shrunk (only in case if it is placed in a layout)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="expand" type="DIRECTION" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Indicates that the widget can get as much space as possible (only in case if it is placed in a layout)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="backalign" type="ALIGN" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Alignment of the background relative to its parent</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="forealign" type="ALIGN" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Alignment of the foreground relative to the background</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="textalign" type="ALIGN" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Alignment of text in the widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="margins" type="MARGINS" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Margins around the widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="borders" type="BORDERS" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Borders around the widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="paddings" type="PADDINGS" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Text paddings in the widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="backcolor" type="COLOR" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Background color (0xAARRGGBB, AA=alpha, RR=red, GG=green, BB=blue)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="forecolor" type="COLOR" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Foreground or text color (0xAARRGGBB, AA=alpha, RR=red, GG=green, BB=blue)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="shortcut" type="TELIUMKEY" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Keyboard shortcut to a widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="visible" type="BOOL" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Indicates if the object is visible (true) or not (false)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="state" type="STATE" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>State of the widget has its creation</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="statemask" type="STATE" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Mask on the state, the widget will be visible only when the state is identical to the mask defined</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="focusable" type="BOOL" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Indicates that the widget can receive focus (true/false)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="clickable" type="BOOL" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Indicates that the widget sends a click event (true/false)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="clicksensitive" type="BOOL" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Indicates that this widget is sensitive pen click (true/false)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="position" type="POSITION" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Position of widget in its parent (WARNING : if it set the widget will be removed from its parent layout)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="size" type="SIZE" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Size of the widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="maxsize" type="SIZE" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Maximal size of the widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="minsize" type="SIZE" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Minimal size of the widget</xs:documentation></xs:annotation>
            </xs:element>
        </xs:all>
    </xs:complexType>
    <xs:complexType name="ITEMS">
        <xs:annotation><xs:documentation>List of items</xs:documentation></xs:annotation>
        <xs:choice maxOccurs="unbounded">
            <xs:element name="button" type="BUTTON">
                <xs:annotation><xs:documentation>The button to command the terminal to perform some action, or to answer a question</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="checkbutton" type="CHECKBUTTON">
                <xs:annotation><xs:documentation>A check button is an option button that can be switched on (checked) or off (unchecked)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="edit" type="EDIT">
                <xs:annotation><xs:documentation>The edit widget provides a widget that is used to edit a single line of text.</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="hslider" type="HSLIDER">
                <xs:annotation><xs:documentation>The slider is the classic widget for controlling a bounded value. It lets the user move a slider handle along groove and translates the handle's position into an integer value within the legal range</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="icon" type="ICON">
                <xs:annotation><xs:documentation>The class icon is equivalent to a button, it allows the display of an image more</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="iconbutton" type="ICONBUTTON">
                <xs:annotation><xs:documentation>This class is an icon followed by a button</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="label" type="LABEL">
                <xs:annotation><xs:documentation>This class is used to display text on a line or a multi-line text</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="layout" type="LAYOUT">
                <xs:annotation><xs:documentation>The layout can be viewed as a table with multiple rows and columns to place widgets</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="palette" type="PALETTE">
                <xs:annotation><xs:documentation>A palette is a widget that can display a color palette</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="picture" type="PICTURE">
                <xs:annotation><xs:documentation>A picture is a widget that can display a fixed image or animated image</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="progressbar" type="PROGRESSBAR">
                <xs:annotation><xs:documentation>A progress bar is used to give the user an indication of the progress of an operation </xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="radiobutton" type="RADIOBUTTON">
                <xs:annotation><xs:documentation>A radio button is an option button that can be switched on (checked) or off (unchecked)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="virtualkeyboard" type="VIRTUALKEYBOARD">
                <xs:annotation><xs:documentation>The virtual keyboard allows easy entry of special characters</xs:documentation></xs:annotation>
            </xs:element>
        </xs:choice>
    </xs:complexType>
    <xs:complexType name="LIST">
        <xs:annotation><xs:documentation>The list allows the display of all elements of widgets</xs:documentation></xs:annotation>
        <xs:choice maxOccurs="unbounded">
            <xs:element name="idname" type="IDNAMEREF" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>idname must respect the following naming convention: ${widgetMappingsImlRelativePath)#${IdName} where ${widgetMappingsImlRelativePath) is the relative path to the widgetMappings.iml file in the project, and ${IdName} is the widget identifier. The value of ${IdName} must be one of the "idname" attributes declared in the "widgetMappings.iml" file {IdName} must start with alpha character, and then any alphanumeric and '_' are allowed. The string must be unique in a GML file. Example: "../widgetMappings.iml#BUTTON_OK"</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="children" type="CHILDREN" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Children items attached to this widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="item" type="ITEM" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Location in the layout</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="grow" type="DIRECTION" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Indicates that the widget can be growed (only in case if it is placed in a layout)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="shrink" type="DIRECTION" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Indicates that the widget can be shrunk (only in case if it is placed in a layout)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="expand" type="DIRECTION" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Indicates that the widget can get as much space as possible (only in case if it is placed in a layout)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="backalign" type="ALIGN" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Alignment of the background relative to its parent</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="forealign" type="ALIGN" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Alignment of the foreground relative to the background</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="textalign" type="ALIGN" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Alignment of text in the widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="margins" type="MARGINS" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Margins around the widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="borders" type="BORDERS" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Borders around the widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="paddings" type="PADDINGS" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Text paddings in the widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="backcolor" type="COLOR" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Background color (0xAARRGGBB, AA=alpha, RR=red, GG=green, BB=blue)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="forecolor" type="COLOR" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Foreground or text color (0xAARRGGBB, AA=alpha, RR=red, GG=green, BB=blue)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="shortcut" type="TELIUMKEY" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Keyboard shortcut to a widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="visible" type="BOOL" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Indicates if the object is visible (true) or not (false)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="state" type="STATE" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>State of the widget has its creation</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="statemask" type="STATE" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Mask on the state, the widget will be visible only when the state is identical to the mask defined</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="focusable" type="BOOL" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Indicates that the widget can receive focus (true/false)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="clickable" type="BOOL" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Indicates that the widget sends a click event (true/false)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="clicksensitive" type="BOOL" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Indicates that this widget is sensitive pen click (true/false)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="position" type="POSITION" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Position of widget in its parent (WARNING : if it set the widget will be removed from its parent layout)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="size" type="SIZE" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Size of the widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="maxsize" type="SIZE" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Maximal size of the widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="minsize" type="SIZE" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Minimal size of the widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="items" type="ITEMS" minOccurs="0" maxOccurs="unbounded">
                <xs:annotation><xs:documentation>List of items</xs:documentation></xs:annotation>
            </xs:element>
        </xs:choice>
    </xs:complexType>
    <xs:complexType name="MEDIA">
        <xs:annotation><xs:documentation>This class is used to play movie or sound</xs:documentation></xs:annotation>
        <xs:all>
            <xs:element name="idname" type="IDNAMEREF" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>idname must respect the following naming convention: ${widgetMappingsImlRelativePath)#${IdName} where ${widgetMappingsImlRelativePath) is the relative path to the widgetMappings.iml file in the project, and ${IdName} is the widget identifier. The value of ${IdName} must be one of the "idname" attributes declared in the "widgetMappings.iml" file {IdName} must start with alpha character, and then any alphanumeric and '_' are allowed. The string must be unique in a GML file. Example: "../widgetMappings.iml#BUTTON_OK"</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="children" type="CHILDREN" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Children items attached to this widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="item" type="ITEM" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Location in the layout</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="grow" type="DIRECTION" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Indicates that the widget can be growed (only in case if it is placed in a layout)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="shrink" type="DIRECTION" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Indicates that the widget can be shrunk (only in case if it is placed in a layout)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="expand" type="DIRECTION" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Indicates that the widget can get as much space as possible (only in case if it is placed in a layout)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="backalign" type="ALIGN" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Alignment of the background relative to its parent</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="forealign" type="ALIGN" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Alignment of the foreground relative to the background</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="textalign" type="ALIGN" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Alignment of text in the widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="margins" type="MARGINS" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Margins around the widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="borders" type="BORDERS" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Borders around the widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="paddings" type="PADDINGS" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Text paddings in the widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="backcolor" type="COLOR" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Background color (0xAARRGGBB, AA=alpha, RR=red, GG=green, BB=blue)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="forecolor" type="COLOR" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Foreground or text color (0xAARRGGBB, AA=alpha, RR=red, GG=green, BB=blue)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="shortcut" type="TELIUMKEY" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Keyboard shortcut to a widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="visible" type="BOOL" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Indicates if the object is visible (true) or not (false)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="state" type="STATE" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>State of the widget has its creation</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="statemask" type="STATE" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Mask on the state, the widget will be visible only when the state is identical to the mask defined</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="focusable" type="BOOL" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Indicates that the widget can receive focus (true/false)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="clickable" type="BOOL" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Indicates that the widget sends a click event (true/false)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="clicksensitive" type="BOOL" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Indicates that this widget is sensitive pen click (true/false)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="position" type="POSITION" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Position of widget in its parent (WARNING : if it set the widget will be removed from its parent layout)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="size" type="SIZE" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Size of the widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="maxsize" type="SIZE" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Maximal size of the widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="minsize" type="SIZE" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Minimal size of the widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="loop" type="BOOL" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>The video has preserved its width height ratio</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="keepratio" type="BOOL" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>The video has preserved its width height ratio</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="source" type="SOURCEFILE" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Filename of the audio or video file (file name can contain alphanumeric, underscore, minus, spaces characters)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="volume" type="xs:short" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Volume level (0..255) 255=loud</xs:documentation></xs:annotation>
            </xs:element>
        </xs:all>
    </xs:complexType>
    <xs:complexType name="PALETTE">
        <xs:annotation><xs:documentation>A palette is a widget that can display a color palette</xs:documentation></xs:annotation>
        <xs:all>
            <xs:element name="idname" type="IDNAMEREF" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>idname must respect the following naming convention: ${widgetMappingsImlRelativePath)#${IdName} where ${widgetMappingsImlRelativePath) is the relative path to the widgetMappings.iml file in the project, and ${IdName} is the widget identifier. The value of ${IdName} must be one of the "idname" attributes declared in the "widgetMappings.iml" file {IdName} must start with alpha character, and then any alphanumeric and '_' are allowed. The string must be unique in a GML file. Example: "../widgetMappings.iml#BUTTON_OK"</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="children" type="CHILDREN" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Children items attached to this widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="item" type="ITEM" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Location in the layout</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="grow" type="DIRECTION" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Indicates that the widget can be growed (only in case if it is placed in a layout)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="shrink" type="DIRECTION" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Indicates that the widget can be shrunk (only in case if it is placed in a layout)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="expand" type="DIRECTION" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Indicates that the widget can get as much space as possible (only in case if it is placed in a layout)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="backalign" type="ALIGN" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Alignment of the background relative to its parent</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="forealign" type="ALIGN" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Alignment of the foreground relative to the background</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="textalign" type="ALIGN" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Alignment of text in the widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="margins" type="MARGINS" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Margins around the widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="borders" type="BORDERS" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Borders around the widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="paddings" type="PADDINGS" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Text paddings in the widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="backcolor" type="COLOR" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Background color (0xAARRGGBB, AA=alpha, RR=red, GG=green, BB=blue)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="forecolor" type="COLOR" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Foreground or text color (0xAARRGGBB, AA=alpha, RR=red, GG=green, BB=blue)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="shortcut" type="TELIUMKEY" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Keyboard shortcut to a widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="visible" type="BOOL" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Indicates if the object is visible (true) or not (false)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="state" type="STATE" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>State of the widget has its creation</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="statemask" type="STATE" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Mask on the state, the widget will be visible only when the state is identical to the mask defined</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="focusable" type="BOOL" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Indicates that the widget can receive focus (true/false)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="clickable" type="BOOL" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Indicates that the widget sends a click event (true/false)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="clicksensitive" type="BOOL" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Indicates that this widget is sensitive pen click (true/false)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="position" type="POSITION" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Position of widget in its parent (WARNING : if it set the widget will be removed from its parent layout)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="size" type="SIZE" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Size of the widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="maxsize" type="SIZE" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Maximal size of the widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="minsize" type="SIZE" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Minimal size of the widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="bordercolor" type="xs:integer" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Border color of the color item</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="focusbackcolor" type="xs:integer" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Background color of the focus</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="focusforecolor" type="xs:integer" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Foreground color of the focus</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="focussize" type="xs:integer" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Thickness of the color focus selected on the palette</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="maxcolors" type="xs:integer" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Maximum number of colors present on the palette (This value is the number of columns)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="maxlights" type="xs:integer" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Minimum number of colors present on the palette (This value is the number of rows)</xs:documentation></xs:annotation>
            </xs:element>
        </xs:all>
    </xs:complexType>
    <xs:complexType name="PICTURE">
        <xs:annotation><xs:documentation>A picture is a widget that can display a fixed image or animated image</xs:documentation></xs:annotation>
        <xs:all>
            <xs:element name="idname" type="IDNAMEREF" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>idname must respect the following naming convention: ${widgetMappingsImlRelativePath)#${IdName} where ${widgetMappingsImlRelativePath) is the relative path to the widgetMappings.iml file in the project, and ${IdName} is the widget identifier. The value of ${IdName} must be one of the "idname" attributes declared in the "widgetMappings.iml" file {IdName} must start with alpha character, and then any alphanumeric and '_' are allowed. The string must be unique in a GML file. Example: "../widgetMappings.iml#BUTTON_OK"</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="children" type="CHILDREN" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Children items attached to this widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="item" type="ITEM" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Location in the layout</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="grow" type="DIRECTION" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Indicates that the widget can be growed (only in case if it is placed in a layout)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="shrink" type="DIRECTION" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Indicates that the widget can be shrunk (only in case if it is placed in a layout)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="expand" type="DIRECTION" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Indicates that the widget can get as much space as possible (only in case if it is placed in a layout)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="backalign" type="ALIGN" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Alignment of the background relative to its parent</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="forealign" type="ALIGN" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Alignment of the foreground relative to the background</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="textalign" type="ALIGN" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Alignment of text in the widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="margins" type="MARGINS" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Margins around the widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="borders" type="BORDERS" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Borders around the widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="paddings" type="PADDINGS" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Text paddings in the widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="backcolor" type="COLOR" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Background color (0xAARRGGBB, AA=alpha, RR=red, GG=green, BB=blue)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="forecolor" type="COLOR" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Foreground or text color (0xAARRGGBB, AA=alpha, RR=red, GG=green, BB=blue)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="shortcut" type="TELIUMKEY" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Keyboard shortcut to a widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="visible" type="BOOL" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Indicates if the object is visible (true) or not (false)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="state" type="STATE" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>State of the widget has its creation</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="statemask" type="STATE" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Mask on the state, the widget will be visible only when the state is identical to the mask defined</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="focusable" type="BOOL" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Indicates that the widget can receive focus (true/false)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="clickable" type="BOOL" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Indicates that the widget sends a click event (true/false)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="clicksensitive" type="BOOL" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Indicates that this widget is sensitive pen click (true/false)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="position" type="POSITION" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Position of widget in its parent (WARNING : if it set the widget will be removed from its parent layout)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="size" type="SIZE" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Size of the widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="maxsize" type="SIZE" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Maximal size of the widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="minsize" type="SIZE" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Minimal size of the widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="source" type="SOURCEFILE" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Image source (file name can contain alphanumeric, underscore, minus, spaces characters)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="transformation" type="TRANSFORMATION" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Image transformation</xs:documentation></xs:annotation>
            </xs:element>
        </xs:all>
    </xs:complexType>
    <xs:complexType name="PLUGIN">
        <xs:annotation><xs:documentation>This class is used to play movie or sound</xs:documentation></xs:annotation>
        <xs:all>
            <xs:element name="idname" type="IDNAMEREF" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>idname must respect the following naming convention: ${widgetMappingsImlRelativePath)#${IdName} where ${widgetMappingsImlRelativePath) is the relative path to the widgetMappings.iml file in the project, and ${IdName} is the widget identifier. The value of ${IdName} must be one of the "idname" attributes declared in the "widgetMappings.iml" file {IdName} must start with alpha character, and then any alphanumeric and '_' are allowed. The string must be unique in a GML file. Example: "../widgetMappings.iml#BUTTON_OK"</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="children" type="CHILDREN" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Children items attached to this widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="item" type="ITEM" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Location in the layout</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="grow" type="DIRECTION" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Indicates that the widget can be growed (only in case if it is placed in a layout)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="shrink" type="DIRECTION" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Indicates that the widget can be shrunk (only in case if it is placed in a layout)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="expand" type="DIRECTION" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Indicates that the widget can get as much space as possible (only in case if it is placed in a layout)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="backalign" type="ALIGN" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Alignment of the background relative to its parent</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="forealign" type="ALIGN" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Alignment of the foreground relative to the background</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="textalign" type="ALIGN" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Alignment of text in the widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="margins" type="MARGINS" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Margins around the widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="borders" type="BORDERS" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Borders around the widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="paddings" type="PADDINGS" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Text paddings in the widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="backcolor" type="COLOR" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Background color (0xAARRGGBB, AA=alpha, RR=red, GG=green, BB=blue)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="forecolor" type="COLOR" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Foreground or text color (0xAARRGGBB, AA=alpha, RR=red, GG=green, BB=blue)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="shortcut" type="TELIUMKEY" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Keyboard shortcut to a widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="visible" type="BOOL" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Indicates if the object is visible (true) or not (false)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="state" type="STATE" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>State of the widget has its creation</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="statemask" type="STATE" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Mask on the state, the widget will be visible only when the state is identical to the mask defined</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="focusable" type="BOOL" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Indicates that the widget can receive focus (true/false)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="clickable" type="BOOL" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Indicates that the widget sends a click event (true/false)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="clicksensitive" type="BOOL" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Indicates that this widget is sensitive pen click (true/false)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="position" type="POSITION" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Position of widget in its parent (WARNING : if it set the widget will be removed from its parent layout)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="size" type="SIZE" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Size of the widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="maxsize" type="SIZE" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Maximal size of the widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="minsize" type="SIZE" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Minimal size of the widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="mimetype" type="xs:string" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Mime type used to find the DLL plugin</xs:documentation></xs:annotation>
            </xs:element>
        </xs:all>
    </xs:complexType>
    <xs:complexType name="PRINT">
        <xs:annotation><xs:documentation>This class is used to print text on a line or a multi-line text</xs:documentation></xs:annotation>
        <xs:all>
            <xs:element name="idname" type="IDNAMEREF" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>idname must respect the following naming convention: ${widgetMappingsImlRelativePath)#${IdName} where ${widgetMappingsImlRelativePath) is the relative path to the widgetMappings.iml file in the project, and ${IdName} is the widget identifier. The value of ${IdName} must be one of the "idname" attributes declared in the "widgetMappings.iml" file {IdName} must start with alpha character, and then any alphanumeric and '_' are allowed. The string must be unique in a GML file. Example: "../widgetMappings.iml#BUTTON_OK"</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="children" type="CHILDREN" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Children items attached to this widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="item" type="ITEM" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Location in the layout</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="grow" type="DIRECTION" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Indicates that the widget can be growed (only in case if it is placed in a layout)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="shrink" type="DIRECTION" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Indicates that the widget can be shrunk (only in case if it is placed in a layout)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="expand" type="DIRECTION" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Indicates that the widget can get as much space as possible (only in case if it is placed in a layout)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="backalign" type="ALIGN" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Alignment of the background relative to its parent</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="forealign" type="ALIGN" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Alignment of the foreground relative to the background</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="textalign" type="ALIGN" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Alignment of text in the widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="margins" type="MARGINS" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Margins around the widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="borders" type="BORDERS" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Borders around the widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="paddings" type="PADDINGS" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Text paddings in the widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="backcolor" type="COLOR" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Background color (0xAARRGGBB, AA=alpha, RR=red, GG=green, BB=blue)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="forecolor" type="COLOR" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Foreground or text color (0xAARRGGBB, AA=alpha, RR=red, GG=green, BB=blue)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="shortcut" type="TELIUMKEY" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Keyboard shortcut to a widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="visible" type="BOOL" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Indicates if the object is visible (true) or not (false)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="state" type="STATE" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>State of the widget has its creation</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="statemask" type="STATE" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Mask on the state, the widget will be visible only when the state is identical to the mask defined</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="focusable" type="BOOL" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Indicates that the widget can receive focus (true/false)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="clickable" type="BOOL" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Indicates that the widget sends a click event (true/false)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="clicksensitive" type="BOOL" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Indicates that this widget is sensitive pen click (true/false)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="position" type="POSITION" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Position of widget in its parent (WARNING : if it set the widget will be removed from its parent layout)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="size" type="SIZE" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Size of the widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="maxsize" type="SIZE" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Maximal size of the widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="minsize" type="SIZE" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Minimal size of the widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="font" type="FONT" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Font used in print of text</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="text" type="xs:string" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Text printed on the widget</xs:documentation></xs:annotation>
            </xs:element>
        </xs:all>
    </xs:complexType>
    <xs:complexType name="PROGRESSBAR">
        <xs:annotation><xs:documentation>A progress bar is used to give the user an indication of the progress of an operation </xs:documentation></xs:annotation>
        <xs:all>
            <xs:element name="idname" type="IDNAMEREF" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>idname must respect the following naming convention: ${widgetMappingsImlRelativePath)#${IdName} where ${widgetMappingsImlRelativePath) is the relative path to the widgetMappings.iml file in the project, and ${IdName} is the widget identifier. The value of ${IdName} must be one of the "idname" attributes declared in the "widgetMappings.iml" file {IdName} must start with alpha character, and then any alphanumeric and '_' are allowed. The string must be unique in a GML file. Example: "../widgetMappings.iml#BUTTON_OK"</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="children" type="CHILDREN" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Children items attached to this widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="item" type="ITEM" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Location in the layout</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="grow" type="DIRECTION" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Indicates that the widget can be growed (only in case if it is placed in a layout)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="shrink" type="DIRECTION" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Indicates that the widget can be shrunk (only in case if it is placed in a layout)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="expand" type="DIRECTION" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Indicates that the widget can get as much space as possible (only in case if it is placed in a layout)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="backalign" type="ALIGN" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Alignment of the background relative to its parent</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="forealign" type="ALIGN" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Alignment of the foreground relative to the background</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="textalign" type="ALIGN" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Alignment of text in the widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="margins" type="MARGINS" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Margins around the widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="borders" type="BORDERS" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Borders around the widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="paddings" type="PADDINGS" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Text paddings in the widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="backcolor" type="COLOR" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Background color (0xAARRGGBB, AA=alpha, RR=red, GG=green, BB=blue)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="forecolor" type="COLOR" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Foreground or text color (0xAARRGGBB, AA=alpha, RR=red, GG=green, BB=blue)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="shortcut" type="TELIUMKEY" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Keyboard shortcut to a widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="visible" type="BOOL" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Indicates if the object is visible (true) or not (false)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="state" type="STATE" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>State of the widget has its creation</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="statemask" type="STATE" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Mask on the state, the widget will be visible only when the state is identical to the mask defined</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="focusable" type="BOOL" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Indicates that the widget can receive focus (true/false)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="clickable" type="BOOL" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Indicates that the widget sends a click event (true/false)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="clicksensitive" type="BOOL" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Indicates that this widget is sensitive pen click (true/false)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="position" type="POSITION" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Position of widget in its parent (WARNING : if it set the widget will be removed from its parent layout)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="size" type="SIZE" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Size of the widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="maxsize" type="SIZE" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Maximal size of the widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="minsize" type="SIZE" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Minimal size of the widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="font" type="FONT" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Font used in display of text</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="range" type="RANGE" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Range</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="text" type="xs:string" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Text displayed on the widget</xs:documentation></xs:annotation>
            </xs:element>
        </xs:all>
    </xs:complexType>
    <xs:complexType name="RADIOBUTTON">
        <xs:annotation><xs:documentation>A radio button is an option button that can be switched on (checked) or off (unchecked)</xs:documentation></xs:annotation>
        <xs:all>
            <xs:element name="idname" type="IDNAMEREF" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>idname must respect the following naming convention: ${widgetMappingsImlRelativePath)#${IdName} where ${widgetMappingsImlRelativePath) is the relative path to the widgetMappings.iml file in the project, and ${IdName} is the widget identifier. The value of ${IdName} must be one of the "idname" attributes declared in the "widgetMappings.iml" file {IdName} must start with alpha character, and then any alphanumeric and '_' are allowed. The string must be unique in a GML file. Example: "../widgetMappings.iml#BUTTON_OK"</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="children" type="CHILDREN" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Children items attached to this widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="item" type="ITEM" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Location in the layout</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="grow" type="DIRECTION" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Indicates that the widget can be growed (only in case if it is placed in a layout)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="shrink" type="DIRECTION" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Indicates that the widget can be shrunk (only in case if it is placed in a layout)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="expand" type="DIRECTION" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Indicates that the widget can get as much space as possible (only in case if it is placed in a layout)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="backalign" type="ALIGN" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Alignment of the background relative to its parent</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="forealign" type="ALIGN" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Alignment of the foreground relative to the background</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="textalign" type="ALIGN" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Alignment of text in the widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="margins" type="MARGINS" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Margins around the widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="borders" type="BORDERS" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Borders around the widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="paddings" type="PADDINGS" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Text paddings in the widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="backcolor" type="COLOR" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Background color (0xAARRGGBB, AA=alpha, RR=red, GG=green, BB=blue)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="forecolor" type="COLOR" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Foreground or text color (0xAARRGGBB, AA=alpha, RR=red, GG=green, BB=blue)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="shortcut" type="TELIUMKEY" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Keyboard shortcut to a widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="visible" type="BOOL" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Indicates if the object is visible (true) or not (false)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="state" type="STATE" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>State of the widget has its creation</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="statemask" type="STATE" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Mask on the state, the widget will be visible only when the state is identical to the mask defined</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="focusable" type="BOOL" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Indicates that the widget can receive focus (true/false)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="clickable" type="BOOL" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Indicates that the widget sends a click event (true/false)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="clicksensitive" type="BOOL" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Indicates that this widget is sensitive pen click (true/false)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="position" type="POSITION" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Position of widget in its parent (WARNING : if it set the widget will be removed from its parent layout)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="size" type="SIZE" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Size of the widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="maxsize" type="SIZE" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Maximal size of the widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="minsize" type="SIZE" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Minimal size of the widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="text" type="xs:string" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Text displayed on the widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="font" type="FONT" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Font used in display of text</xs:documentation></xs:annotation>
            </xs:element>
        </xs:all>
    </xs:complexType>
    <xs:complexType name="SCROLLVIEW">
        <xs:annotation><xs:documentation>A scroll view is used to display the contents of many children widget within a frame</xs:documentation></xs:annotation>
        <xs:all>
            <xs:element name="idname" type="IDNAMEREF" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>idname must respect the following naming convention: ${widgetMappingsImlRelativePath)#${IdName} where ${widgetMappingsImlRelativePath) is the relative path to the widgetMappings.iml file in the project, and ${IdName} is the widget identifier. The value of ${IdName} must be one of the "idname" attributes declared in the "widgetMappings.iml" file {IdName} must start with alpha character, and then any alphanumeric and '_' are allowed. The string must be unique in a GML file. Example: "../widgetMappings.iml#BUTTON_OK"</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="children" type="CHILDREN" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Children items attached to this widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="item" type="ITEM" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Location in the layout</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="grow" type="DIRECTION" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Indicates that the widget can be growed (only in case if it is placed in a layout)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="shrink" type="DIRECTION" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Indicates that the widget can be shrunk (only in case if it is placed in a layout)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="expand" type="DIRECTION" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Indicates that the widget can get as much space as possible (only in case if it is placed in a layout)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="backalign" type="ALIGN" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Alignment of the background relative to its parent</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="forealign" type="ALIGN" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Alignment of the foreground relative to the background</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="textalign" type="ALIGN" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Alignment of text in the widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="margins" type="MARGINS" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Margins around the widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="borders" type="BORDERS" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Borders around the widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="paddings" type="PADDINGS" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Text paddings in the widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="backcolor" type="COLOR" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Background color (0xAARRGGBB, AA=alpha, RR=red, GG=green, BB=blue)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="forecolor" type="COLOR" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Foreground or text color (0xAARRGGBB, AA=alpha, RR=red, GG=green, BB=blue)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="shortcut" type="TELIUMKEY" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Keyboard shortcut to a widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="visible" type="BOOL" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Indicates if the object is visible (true) or not (false)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="state" type="STATE" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>State of the widget has its creation</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="statemask" type="STATE" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Mask on the state, the widget will be visible only when the state is identical to the mask defined</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="focusable" type="BOOL" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Indicates that the widget can receive focus (true/false)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="clickable" type="BOOL" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Indicates that the widget sends a click event (true/false)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="clicksensitive" type="BOOL" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Indicates that this widget is sensitive pen click (true/false)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="position" type="POSITION" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Position of widget in its parent (WARNING : if it set the widget will be removed from its parent layout)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="size" type="SIZE" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Size of the widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="maxsize" type="SIZE" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Maximal size of the widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="minsize" type="SIZE" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Minimal size of the widget</xs:documentation></xs:annotation>
            </xs:element>
        </xs:all>
    </xs:complexType>
    <xs:complexType name="SIGNATURE">
        <xs:annotation><xs:documentation>This class is used to play movie or sound</xs:documentation></xs:annotation>
        <xs:all>
            <xs:element name="idname" type="IDNAMEREF" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>idname must respect the following naming convention: ${widgetMappingsImlRelativePath)#${IdName} where ${widgetMappingsImlRelativePath) is the relative path to the widgetMappings.iml file in the project, and ${IdName} is the widget identifier. The value of ${IdName} must be one of the "idname" attributes declared in the "widgetMappings.iml" file {IdName} must start with alpha character, and then any alphanumeric and '_' are allowed. The string must be unique in a GML file. Example: "../widgetMappings.iml#BUTTON_OK"</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="children" type="CHILDREN" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Children items attached to this widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="item" type="ITEM" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Location in the layout</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="grow" type="DIRECTION" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Indicates that the widget can be growed (only in case if it is placed in a layout)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="shrink" type="DIRECTION" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Indicates that the widget can be shrunk (only in case if it is placed in a layout)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="expand" type="DIRECTION" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Indicates that the widget can get as much space as possible (only in case if it is placed in a layout)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="backalign" type="ALIGN" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Alignment of the background relative to its parent</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="forealign" type="ALIGN" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Alignment of the foreground relative to the background</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="textalign" type="ALIGN" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Alignment of text in the widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="margins" type="MARGINS" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Margins around the widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="borders" type="BORDERS" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Borders around the widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="paddings" type="PADDINGS" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Text paddings in the widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="backcolor" type="COLOR" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Background color (0xAARRGGBB, AA=alpha, RR=red, GG=green, BB=blue)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="forecolor" type="COLOR" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Foreground or text color (0xAARRGGBB, AA=alpha, RR=red, GG=green, BB=blue)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="shortcut" type="TELIUMKEY" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Keyboard shortcut to a widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="visible" type="BOOL" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Indicates if the object is visible (true) or not (false)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="state" type="STATE" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>State of the widget has its creation</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="statemask" type="STATE" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Mask on the state, the widget will be visible only when the state is identical to the mask defined</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="focusable" type="BOOL" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Indicates that the widget can receive focus (true/false)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="clickable" type="BOOL" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Indicates that the widget sends a click event (true/false)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="clicksensitive" type="BOOL" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Indicates that this widget is sensitive pen click (true/false)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="position" type="POSITION" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Position of widget in its parent (WARNING : if it set the widget will be removed from its parent layout)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="size" type="SIZE" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Size of the widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="maxsize" type="SIZE" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Maximal size of the widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="minsize" type="SIZE" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Minimal size of the widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="penwidth" type="xs:integer" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Pen width in pixels</xs:documentation></xs:annotation>
            </xs:element>
        </xs:all>
    </xs:complexType>
    <xs:complexType name="TIMER">
        <xs:annotation><xs:documentation>Repetitive timers</xs:documentation></xs:annotation>
        <xs:all>
            <xs:element name="idname" type="IDNAMEREF" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>idname must respect the following naming convention: ${widgetMappingsImlRelativePath)#${IdName} where ${widgetMappingsImlRelativePath) is the relative path to the widgetMappings.iml file in the project, and ${IdName} is the widget identifier. The value of ${IdName} must be one of the "idname" attributes declared in the "widgetMappings.iml" file {IdName} must start with alpha character, and then any alphanumeric and '_' are allowed. The string must be unique in a GML file. Example: "../widgetMappings.iml#BUTTON_OK"</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="children" type="CHILDREN" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Children items attached to this widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="item" type="ITEM" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Location in the layout</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="grow" type="DIRECTION" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Indicates that the widget can be growed (only in case if it is placed in a layout)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="shrink" type="DIRECTION" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Indicates that the widget can be shrunk (only in case if it is placed in a layout)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="expand" type="DIRECTION" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Indicates that the widget can get as much space as possible (only in case if it is placed in a layout)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="backalign" type="ALIGN" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Alignment of the background relative to its parent</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="forealign" type="ALIGN" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Alignment of the foreground relative to the background</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="textalign" type="ALIGN" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Alignment of text in the widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="margins" type="MARGINS" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Margins around the widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="borders" type="BORDERS" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Borders around the widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="paddings" type="PADDINGS" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Text paddings in the widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="backcolor" type="COLOR" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Background color (0xAARRGGBB, AA=alpha, RR=red, GG=green, BB=blue)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="forecolor" type="COLOR" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Foreground or text color (0xAARRGGBB, AA=alpha, RR=red, GG=green, BB=blue)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="shortcut" type="TELIUMKEY" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Keyboard shortcut to a widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="visible" type="BOOL" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Indicates if the object is visible (true) or not (false)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="state" type="STATE" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>State of the widget has its creation</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="statemask" type="STATE" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Mask on the state, the widget will be visible only when the state is identical to the mask defined</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="focusable" type="BOOL" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Indicates that the widget can receive focus (true/false)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="clickable" type="BOOL" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Indicates that the widget sends a click event (true/false)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="clicksensitive" type="BOOL" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Indicates that this widget is sensitive pen click (true/false)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="position" type="POSITION" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Position of widget in its parent (WARNING : if it set the widget will be removed from its parent layout)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="size" type="SIZE" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Size of the widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="maxsize" type="SIZE" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Maximal size of the widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="minsize" type="SIZE" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Minimal size of the widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="enabled" type="BOOL" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>true indicates that the timer is automaticaly started at the creation, false indicates that is not started</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="interval" type="xs:integer" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Interval of timer in milliseconds</xs:documentation></xs:annotation>
            </xs:element>
        </xs:all>
    </xs:complexType>
    <xs:simpleType name="UNIT">
        <xs:annotation><xs:documentation>Unit supported by the graphical library.</xs:documentation></xs:annotation>
        <xs:restriction base="xs:string">
            <xs:enumeration value="pixel" >
                <xs:annotation><xs:documentation>Dimensions or position are expressed in pixels</xs:documentation></xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="percent" >
                <xs:annotation><xs:documentation>Dimensions or position are expressed in percentage of parent</xs:documentation></xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="perthousand" >
                <xs:annotation><xs:documentation>Dimensions or position are expressed in per thousand of parent</xs:documentation></xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="px" >
                <xs:annotation><xs:documentation>Dimensions or position are expressed in pixels</xs:documentation></xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="%" >
                <xs:annotation><xs:documentation>Dimensions or position are expressed in percentage of parent</xs:documentation></xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="%%" >
                <xs:annotation><xs:documentation>Dimensions or position are expressed in per thousand of parent</xs:documentation></xs:annotation>
            </xs:enumeration>
        </xs:restriction>
    </xs:simpleType>
    <xs:complexType name="SIZE">
        <xs:annotation><xs:documentation>Defines a size</xs:documentation></xs:annotation>
        <xs:all>
            <xs:element name="width" type="xs:integer" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Width coded according to the chosen unit</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="height" type="xs:integer" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Height coded according to the chosen unit</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="unit" type="UNIT" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Unit used</xs:documentation></xs:annotation>
            </xs:element>
        </xs:all>
    </xs:complexType>
    <xs:complexType name="POSITION">
        <xs:annotation><xs:documentation>Defines a position</xs:documentation></xs:annotation>
        <xs:all>
            <xs:element name="x" type="xs:integer" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>x coordinates coded according to the chosen unit</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="y" type="xs:integer" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>y coordinates coded according to the chosen unit</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="unit" type="UNIT" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Unit used</xs:documentation></xs:annotation>
            </xs:element>
        </xs:all>
    </xs:complexType>
    <xs:complexType name="MARGINS">
        <xs:annotation><xs:documentation>Defines all margins</xs:documentation></xs:annotation>
        <xs:all>
            <xs:element name="left" type="xs:integer" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Left margin coded according to the chosen unit</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="top" type="xs:integer" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Top margin coded according to the chosen unit</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="right" type="xs:integer" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Right margin coded according to the chosen unit</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="bottom" type="xs:integer" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Bottom margin coded according to the chosen unit</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="unit" type="UNIT" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Unit used</xs:documentation></xs:annotation>
            </xs:element>
        </xs:all>
    </xs:complexType>
    <xs:complexType name="PADDINGS">
        <xs:annotation><xs:documentation>Defines a paddings</xs:documentation></xs:annotation>
        <xs:all>
            <xs:element name="left" type="xs:integer" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Left padding coded according to the chosen unit</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="top" type="xs:integer" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Top padding coded according to the chosen unit</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="right" type="xs:integer" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Right padding coded according to the chosen unit</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="bottom" type="xs:integer" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Bottom padding coded according to the chosen unit</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="unit" type="UNIT" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Unit used</xs:documentation></xs:annotation>
            </xs:element>
        </xs:all>
    </xs:complexType>
    <xs:complexType name="BORDERS">
        <xs:annotation><xs:documentation>Defines a borders</xs:documentation></xs:annotation>
        <xs:all>
            <xs:element name="left" type="xs:integer" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Left border coded according to the chosen unit</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="top" type="xs:integer" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Top border coded according to the chosen unit</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="right" type="xs:integer" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Right border coded according to the chosen unit</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="bottom" type="xs:integer" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Bottom border coded according to the chosen unit</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="unit" type="UNIT" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Unit used</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="color" type="COLOR" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>border color (0xAARRGGBB, AA=alpha, RR=red, GG=green, BB=blue)</xs:documentation></xs:annotation>
            </xs:element>
        </xs:all>
    </xs:complexType>
    <xs:complexType name="RANGE">
        <xs:annotation><xs:documentation>Range</xs:documentation></xs:annotation>
        <xs:all>
            <xs:element name="min" type="xs:integer" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>The minimum limit of the scroll bar</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="max" type="xs:integer" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>The maximum limit of the scroll bar</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="value" type="xs:integer" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>The value of the scroll bar</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="page" type="xs:integer" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>The page size of the scroll bar (scales the size of slider in the scrollbar)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="step" type="xs:integer" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>The step increment</xs:documentation></xs:annotation>
            </xs:element>
        </xs:all>
    </xs:complexType>
    <xs:complexType name="PAGE">
        <xs:annotation><xs:documentation>Page of characters displayed on the virtual keyboard</xs:documentation></xs:annotation>
        <xs:all>
            <xs:element name="name" type="xs:string" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Page name displayed in the button page selection</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="mapping" type="xs:string" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>List of characters in the page content, use \n to change the line, use \uXXXX to enter an unicode value</xs:documentation></xs:annotation>
            </xs:element>
        </xs:all>
    </xs:complexType>
    <xs:complexType name="PAGES">
        <xs:annotation><xs:documentation>List of drawing actions</xs:documentation></xs:annotation>
        <xs:choice maxOccurs="unbounded">
            <xs:element name="page" type="PAGE">
                <xs:annotation><xs:documentation>Mapping definition of the binary virtual keyboard</xs:documentation></xs:annotation>
            </xs:element>
        </xs:choice>
    </xs:complexType>
    <xs:complexType name="VIRTUALKEYBOARD">
        <xs:annotation><xs:documentation>The virtual keyboard allows easy entry of special characters</xs:documentation></xs:annotation>
        <xs:all>
            <xs:element name="idname" type="IDNAMEREF" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>idname must respect the following naming convention: ${widgetMappingsImlRelativePath)#${IdName} where ${widgetMappingsImlRelativePath) is the relative path to the widgetMappings.iml file in the project, and ${IdName} is the widget identifier. The value of ${IdName} must be one of the "idname" attributes declared in the "widgetMappings.iml" file {IdName} must start with alpha character, and then any alphanumeric and '_' are allowed. The string must be unique in a GML file. Example: "../widgetMappings.iml#BUTTON_OK"</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="children" type="CHILDREN" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Children items attached to this widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="item" type="ITEM" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Location in the layout</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="grow" type="DIRECTION" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Indicates that the widget can be growed (only in case if it is placed in a layout)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="shrink" type="DIRECTION" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Indicates that the widget can be shrunk (only in case if it is placed in a layout)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="expand" type="DIRECTION" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Indicates that the widget can get as much space as possible (only in case if it is placed in a layout)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="backalign" type="ALIGN" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Alignment of the background relative to its parent</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="forealign" type="ALIGN" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Alignment of the foreground relative to the background</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="textalign" type="ALIGN" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Alignment of text in the widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="margins" type="MARGINS" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Margins around the widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="borders" type="BORDERS" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Borders around the widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="paddings" type="PADDINGS" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Text paddings in the widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="backcolor" type="COLOR" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Background color (0xAARRGGBB, AA=alpha, RR=red, GG=green, BB=blue)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="forecolor" type="COLOR" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Foreground or text color (0xAARRGGBB, AA=alpha, RR=red, GG=green, BB=blue)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="shortcut" type="TELIUMKEY" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Keyboard shortcut to a widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="visible" type="BOOL" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Indicates if the object is visible (true) or not (false)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="state" type="STATE" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>State of the widget has its creation</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="statemask" type="STATE" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Mask on the state, the widget will be visible only when the state is identical to the mask defined</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="focusable" type="BOOL" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Indicates that the widget can receive focus (true/false)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="clickable" type="BOOL" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Indicates that the widget sends a click event (true/false)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="clicksensitive" type="BOOL" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Indicates that this widget is sensitive pen click (true/false)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="position" type="POSITION" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Position of widget in its parent (WARNING : if it set the widget will be removed from its parent layout)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="size" type="SIZE" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Size of the widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="maxsize" type="SIZE" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Maximal size of the widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="minsize" type="SIZE" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Minimal size of the widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="font" type="FONT" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Font used in display of text</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="fillchar1" type="CHARACTER" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Sets the default fill character 1 (This character appears only in fields with an input mask defined)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="fillchar2" type="CHARACTER" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Sets the default fill character 2 (This character appears only in fields with an input mask defined)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="mask" type="xs:string" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>mask string handle, see 'Mask properties' in the documentation</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="mode" type="INPUTMODE" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Configure the input mode</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="passwordchar" type="CHARACTER" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Sets the default password character (This character appears only in fields with an input mask defined)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="text" type="xs:string" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Text displayed on the widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="binary" type="PAGES" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Mapping definition of the binary virtual keyboard</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="octal" type="PAGES" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Mapping definition of the octal virtual keyboard</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="decimal" type="PAGES" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Mapping definition of the decimal virtual keyboard</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="hexadecimal" type="PAGES" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Mapping definition of the hexadecimal virtual keyboard</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="alphanumeric" type="PAGES" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Mapping definition of the alphanumerical virtual keyboard</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="anychar" type="PAGES" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Mapping definition of the any character virtual keyboard</xs:documentation></xs:annotation>
            </xs:element>
        </xs:all>
    </xs:complexType>
    <xs:complexType name="VSCROLLBAR">
        <xs:annotation><xs:documentation>A scroll bar is a control that enables the user to access parts of a document that is larger than the widget used to display it</xs:documentation></xs:annotation>
        <xs:all>
            <xs:element name="idname" type="IDNAMEREF" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>idname must respect the following naming convention: ${widgetMappingsImlRelativePath)#${IdName} where ${widgetMappingsImlRelativePath) is the relative path to the widgetMappings.iml file in the project, and ${IdName} is the widget identifier. The value of ${IdName} must be one of the "idname" attributes declared in the "widgetMappings.iml" file {IdName} must start with alpha character, and then any alphanumeric and '_' are allowed. The string must be unique in a GML file. Example: "../widgetMappings.iml#BUTTON_OK"</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="children" type="CHILDREN" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Children items attached to this widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="item" type="ITEM" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Location in the layout</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="grow" type="DIRECTION" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Indicates that the widget can be growed (only in case if it is placed in a layout)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="shrink" type="DIRECTION" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Indicates that the widget can be shrunk (only in case if it is placed in a layout)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="expand" type="DIRECTION" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Indicates that the widget can get as much space as possible (only in case if it is placed in a layout)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="backalign" type="ALIGN" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Alignment of the background relative to its parent</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="forealign" type="ALIGN" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Alignment of the foreground relative to the background</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="textalign" type="ALIGN" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Alignment of text in the widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="margins" type="MARGINS" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Margins around the widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="borders" type="BORDERS" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Borders around the widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="paddings" type="PADDINGS" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Text paddings in the widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="backcolor" type="COLOR" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Background color (0xAARRGGBB, AA=alpha, RR=red, GG=green, BB=blue)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="forecolor" type="COLOR" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Foreground or text color (0xAARRGGBB, AA=alpha, RR=red, GG=green, BB=blue)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="shortcut" type="TELIUMKEY" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Keyboard shortcut to a widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="visible" type="BOOL" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Indicates if the object is visible (true) or not (false)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="state" type="STATE" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>State of the widget has its creation</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="statemask" type="STATE" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Mask on the state, the widget will be visible only when the state is identical to the mask defined</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="focusable" type="BOOL" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Indicates that the widget can receive focus (true/false)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="clickable" type="BOOL" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Indicates that the widget sends a click event (true/false)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="clicksensitive" type="BOOL" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Indicates that this widget is sensitive pen click (true/false)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="position" type="POSITION" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Position of widget in its parent (WARNING : if it set the widget will be removed from its parent layout)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="size" type="SIZE" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Size of the widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="maxsize" type="SIZE" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Maximal size of the widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="minsize" type="SIZE" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Minimal size of the widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="range" type="RANGE" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Range</xs:documentation></xs:annotation>
            </xs:element>
        </xs:all>
    </xs:complexType>
    <xs:simpleType name="TELIUMKEY">
        <xs:annotation><xs:documentation>Telium keys values</xs:documentation></xs:annotation>
        <xs:restriction base="xs:string">
            <xs:enumeration value="KEY_0" >
                <xs:annotation><xs:documentation>Telium numeric 0 key</xs:documentation></xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="KEY_1" >
                <xs:annotation><xs:documentation>Telium numeric 1 key</xs:documentation></xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="KEY_2" >
                <xs:annotation><xs:documentation>Telium numeric 2 key</xs:documentation></xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="KEY_3" >
                <xs:annotation><xs:documentation>Telium numeric 3 key</xs:documentation></xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="KEY_4" >
                <xs:annotation><xs:documentation>Telium numeric 4 key</xs:documentation></xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="KEY_5" >
                <xs:annotation><xs:documentation>Telium numeric 5 key</xs:documentation></xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="KEY_6" >
                <xs:annotation><xs:documentation>Telium numeric 6 key</xs:documentation></xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="KEY_7" >
                <xs:annotation><xs:documentation>Telium numeric 7 key</xs:documentation></xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="KEY_8" >
                <xs:annotation><xs:documentation>Telium numeric 8 key</xs:documentation></xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="KEY_9" >
                <xs:annotation><xs:documentation>Telium numeric 9 key</xs:documentation></xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="KEY_DOT" >
                <xs:annotation><xs:documentation>Telium dot key</xs:documentation></xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="KEY_VALID" >
                <xs:annotation><xs:documentation>Telium green key</xs:documentation></xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="KEY_CANCEL" >
                <xs:annotation><xs:documentation>Telium red key</xs:documentation></xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="KEY_CORRECTION" >
                <xs:annotation><xs:documentation>Telium yellow key</xs:documentation></xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="KEY_PAPER" >
                <xs:annotation><xs:documentation>Telium paper feed key</xs:documentation></xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="KEY_F" >
                <xs:annotation><xs:documentation>Telium function key</xs:documentation></xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="KEY_F1" >
                <xs:annotation><xs:documentation>Telium function 1 key</xs:documentation></xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="KEY_F2" >
                <xs:annotation><xs:documentation>Telium function 2 key</xs:documentation></xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="KEY_F3" >
                <xs:annotation><xs:documentation>Telium function 3 key</xs:documentation></xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="KEY_F4" >
                <xs:annotation><xs:documentation>Telium function 4 key</xs:documentation></xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="KEY_UP" >
                <xs:annotation><xs:documentation>Telium up arrow key</xs:documentation></xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="KEY_DOWN" >
                <xs:annotation><xs:documentation>Telium down arrow key</xs:documentation></xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="KEY_OK" >
                <xs:annotation><xs:documentation>Telium ok key</xs:documentation></xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="KEY_CLEAR" >
                <xs:annotation><xs:documentation>Telium clear key</xs:documentation></xs:annotation>
            </xs:enumeration>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="COLOR">
        <xs:annotation><xs:documentation>(0xAARRGGBB, AA=alpha, RR=red, GG=green, BB=blue)</xs:documentation></xs:annotation>
        <xs:restriction base="xs:string">
            <xs:pattern value="0x[A-Fa-f0-9]{8}"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="CHARACTER">
        <xs:annotation><xs:documentation>Character definition. This is the unicode key keyboard see GL_KEY_ in the documentation</xs:documentation></xs:annotation>
        <xs:restriction base="xs:string">
            <xs:pattern value="[0-9]+|(\\u[A-Fa-f0-9]{4})"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:complexType name="CHILDREN">
        <xs:annotation><xs:documentation>Widget children</xs:documentation></xs:annotation>
        <xs:choice maxOccurs="unbounded">
            <xs:element name="button" type="BUTTON">
                <xs:annotation><xs:documentation>The button to command the terminal to perform some action, or to answer a question</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="checkbutton" type="CHECKBUTTON">
                <xs:annotation><xs:documentation>A check button is an option button that can be switched on (checked) or off (unchecked)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="drawing" type="DRAWING">
                <xs:annotation><xs:documentation>the drawing widget is a surface on which the user can draw a graph</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="edit" type="EDIT">
                <xs:annotation><xs:documentation>The edit widget provides a widget that is used to edit a single line of text.</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="hscrollbar" type="HSCROLLBAR">
                <xs:annotation><xs:documentation>A scroll bar is a control that enables the user to access parts of a document that is larger than the widget used to display it</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="hslider" type="HSLIDER">
                <xs:annotation><xs:documentation>The slider is the classic widget for controlling a bounded value. It lets the user move a slider handle along groove and translates the handle's position into an integer value within the legal range</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="icon" type="ICON">
                <xs:annotation><xs:documentation>The class icon is equivalent to a button, it allows the display of an image more</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="iconbutton" type="ICONBUTTON">
                <xs:annotation><xs:documentation>This class is an icon followed by a button</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="label" type="LABEL">
                <xs:annotation><xs:documentation>This class is used to display text on a line or a multi-line text</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="layout" type="LAYOUT">
                <xs:annotation><xs:documentation>The layout can be viewed as a table with multiple rows and columns to place widgets</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="list" type="LIST">
                <xs:annotation><xs:documentation>The list allows the display of all elements of widgets</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="media" type="MEDIA">
                <xs:annotation><xs:documentation>This class is used to play movie or sound</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="palette" type="PALETTE">
                <xs:annotation><xs:documentation>A palette is a widget that can display a color palette</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="picture" type="PICTURE">
                <xs:annotation><xs:documentation>A picture is a widget that can display a fixed image or animated image</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="plugin" type="PLUGIN">
                <xs:annotation><xs:documentation>The plugin is used to manage a generic DLL plugin</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="print" type="PRINT">
                <xs:annotation><xs:documentation>This class is used to print text on a line or a multi-line text on the printer</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="progressbar" type="PROGRESSBAR">
                <xs:annotation><xs:documentation>A progress bar is used to give the user an indication of the progress of an operation </xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="radiobutton" type="RADIOBUTTON">
                <xs:annotation><xs:documentation>A radio button is an option button that can be switched on (checked) or off (unchecked)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="scrollview" type="SCROLLVIEW">
                <xs:annotation><xs:documentation>A scroll view is used to display the contents of many children widget within a frame</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="signature" type="SIGNATURE">
                <xs:annotation><xs:documentation>This class is used to capture a signature</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="timer" type="TIMER">
                <xs:annotation><xs:documentation>Repetitive timers</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="virtualkeyboard" type="VIRTUALKEYBOARD">
                <xs:annotation><xs:documentation>The virtual keyboard allows easy entry of special characters</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="vscrollbar" type="VSCROLLBAR">
                <xs:annotation><xs:documentation>A scroll bar is a control that enables the user to access parts of a document that is larger than the widget used to display it</xs:documentation></xs:annotation>
            </xs:element>
        </xs:choice>
    </xs:complexType>
    <xs:complexType name="ITEM">
        <xs:annotation><xs:documentation>Unit used by the coordinates or sizes</xs:documentation></xs:annotation>
        <xs:all>
            <xs:element name="column" type="xs:integer" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Column number in the layout (first row = 0) </xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="row" type="xs:integer" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Row number in the layout (first column = 0)</xs:documentation></xs:annotation>
            </xs:element>
        </xs:all>
    </xs:complexType>
    <xs:simpleType name="ALIGN">
        <xs:annotation><xs:documentation>Item alignement</xs:documentation></xs:annotation>
        <xs:restriction base="xs:string">
            <xs:enumeration value="center" >
                <xs:annotation><xs:documentation>The item is placed in the center</xs:documentation></xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="top" >
                <xs:annotation><xs:documentation>The item is placed in vertical on the top</xs:documentation></xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="bottom" >
                <xs:annotation><xs:documentation>The item is placed in vertical on the bottom</xs:documentation></xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="left" >
                <xs:annotation><xs:documentation>The item is placed in horizontal on the left</xs:documentation></xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="right" >
                <xs:annotation><xs:documentation>The item is placed in horizontal on the right</xs:documentation></xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="top,left" >
                <xs:annotation><xs:documentation>The item is placed in the top left corner</xs:documentation></xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="top,right" >
                <xs:annotation><xs:documentation>The item is placed in the top right corner</xs:documentation></xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="bottom,left" >
                <xs:annotation><xs:documentation>The item is placed in the bottom left corner</xs:documentation></xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="bottom,right" >
                <xs:annotation><xs:documentation>The item is placed in the bottom right corner</xs:documentation></xs:annotation>
            </xs:enumeration>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="TRANSFORMATION">
        <xs:annotation><xs:documentation>Image transformation</xs:documentation></xs:annotation>
        <xs:restriction base="xs:string">
            <xs:enumeration value="none" >
                <xs:annotation><xs:documentation>No treatment of the image : if the image is too large it will be truncated, if it is too small it will be displayed as it is</xs:documentation></xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="repeatx" >
                <xs:annotation><xs:documentation>The image is repeated on the x-axis</xs:documentation></xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="repeaty" >
                <xs:annotation><xs:documentation>The image is repeated on the y-axis</xs:documentation></xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="repeatall" >
                <xs:annotation><xs:documentation>The image is repeated on all directions</xs:documentation></xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="stretchx" >
                <xs:annotation><xs:documentation>The image is stretched along the x-axis only</xs:documentation></xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="stretchy" >
                <xs:annotation><xs:documentation>The image is stretched along the y-axis only</xs:documentation></xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="stretchall" >
                <xs:annotation><xs:documentation>The image is stretched along the all directions</xs:documentation></xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="fitx" >
                <xs:annotation><xs:documentation>The image will keep its width height ratio, but will be adapted on the X axis, if the image is too high it will be truncated</xs:documentation></xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="fity" >
                <xs:annotation><xs:documentation>The image will keep its width height ratio, but will be adapted on the Y axis, if the image is too large it will be truncated</xs:documentation></xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="fitall" >
                <xs:annotation><xs:documentation>The image size will be adapted to fit exactly to the space without distortion</xs:documentation></xs:annotation>
            </xs:enumeration>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="DIRECTION">
        <xs:annotation><xs:documentation>Direction of the change in size</xs:documentation></xs:annotation>
        <xs:restriction base="xs:string">
            <xs:enumeration value="width" >
                <xs:annotation><xs:documentation>Authorizes a change in size in width</xs:documentation></xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="height" >
                <xs:annotation><xs:documentation>Authorizes a change in size in height</xs:documentation></xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="all" >
                <xs:annotation><xs:documentation>Authorizes a change in size all direction</xs:documentation></xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="none" >
                <xs:annotation><xs:documentation>Prohibits any change in size</xs:documentation></xs:annotation>
            </xs:enumeration>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="STATE">
        <xs:annotation><xs:documentation>State to consider whether to display the widget</xs:documentation></xs:annotation>
        <xs:restriction base="xs:string">
            <xs:enumeration value="focused" >
                <xs:annotation><xs:documentation>The widget has focus</xs:documentation></xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="unfocused" >
                <xs:annotation><xs:documentation>The widget has not focus</xs:documentation></xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="checked" >
                <xs:annotation><xs:documentation>The widget is checked</xs:documentation></xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="unchecked" >
                <xs:annotation><xs:documentation>The widget is not checked</xs:documentation></xs:annotation>
            </xs:enumeration>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="SOURCEFILE">
        <xs:annotation><xs:documentation>Source file name  (file name can contain alphanumeric, underscore, minus, spaces characters)</xs:documentation></xs:annotation>
        <xs:restriction base="xs:string">
            <xs:pattern value=".*"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:complexType name="INPUTMODE">
        <xs:annotation><xs:documentation>Configure the input mode</xs:documentation></xs:annotation>
        <xs:all>
            <xs:element name="blank" type="BOOL" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>false:hide the blank part of input, true:show the blank part of input</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="password" type="BOOL" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>false:The characters entered are displayed, true:The characters entered are replaced by the '*' (used to enter password)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="prompt" type="BOOL" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>false:hide the prompt, true:show the prompt</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="replace" type="BOOL" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>false:The characters entered are inserted into the input field, true:The characters entered replace existing characters in the input field</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="zeroSignificant" type="BOOL" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>false:The zeros are not displayed in the early numbers, true:The zeros are displayed in the early numbers (eg 000123)</xs:documentation></xs:annotation>
            </xs:element>
        </xs:all>
    </xs:complexType>
    <xs:complexType name="WINDOW">
        <xs:annotation><xs:documentation>This widget allows management of a window on the screen</xs:documentation></xs:annotation>
        <xs:all>
            <xs:element name="idname" type="IDNAMEREF" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>idname must respect the following naming convention: ${widgetMappingsImlRelativePath)#${IdName} where ${widgetMappingsImlRelativePath) is the relative path to the widgetMappings.iml file in the project, and ${IdName} is the widget identifier. The value of ${IdName} must be one of the "idname" attributes declared in the "widgetMappings.iml" file {IdName} must start with alpha character, and then any alphanumeric and '_' are allowed. The string must be unique in a GML file. Example: "../widgetMappings.iml#BUTTON_OK"</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="children" type="CHILDREN" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Children items attached to this widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="item" type="ITEM" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Location in the layout</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="grow" type="DIRECTION" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Indicates that the widget can be growed (only in case if it is placed in a layout)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="shrink" type="DIRECTION" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Indicates that the widget can be shrunk (only in case if it is placed in a layout)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="expand" type="DIRECTION" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Indicates that the widget can get as much space as possible (only in case if it is placed in a layout)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="backalign" type="ALIGN" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Alignment of the background relative to its parent</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="forealign" type="ALIGN" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Alignment of the foreground relative to the background</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="textalign" type="ALIGN" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Alignment of text in the widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="margins" type="MARGINS" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Margins around the widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="borders" type="BORDERS" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Borders around the widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="paddings" type="PADDINGS" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Text paddings in the widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="backcolor" type="COLOR" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Background color (0xAARRGGBB, AA=alpha, RR=red, GG=green, BB=blue)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="forecolor" type="COLOR" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Foreground or text color (0xAARRGGBB, AA=alpha, RR=red, GG=green, BB=blue)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="shortcut" type="TELIUMKEY" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Keyboard shortcut to a widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="visible" type="BOOL" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Indicates if the object is visible (true) or not (false)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="state" type="STATE" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>State of the widget has its creation</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="statemask" type="STATE" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Mask on the state, the widget will be visible only when the state is identical to the mask defined</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="focusable" type="BOOL" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Indicates that the widget can receive focus (true/false)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="clickable" type="BOOL" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Indicates that the widget sends a click event (true/false)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="clicksensitive" type="BOOL" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Indicates that this widget is sensitive pen click (true/false)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="position" type="POSITION" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Position of widget in its parent (WARNING : if it set the widget will be removed from its parent layout)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="size" type="SIZE" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Size of the widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="maxsize" type="SIZE" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Maximal size of the widget</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="minsize" type="SIZE" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Minimal size of the widget</xs:documentation></xs:annotation>
            </xs:element>
        </xs:all>
    </xs:complexType>
    <xs:complexType name="FONTSIZE">
        <xs:annotation><xs:documentation>Defines a size</xs:documentation></xs:annotation>
        <xs:all>
            <xs:element name="height" type="FONTSIZES" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Font height</xs:documentation></xs:annotation>
            </xs:element>
        </xs:all>
    </xs:complexType>
    <xs:simpleType name="FONTSIZES">
        <xs:annotation><xs:documentation>Unit supported by the graphical library.</xs:documentation></xs:annotation>
        <xs:restriction base="xs:string">
            <xs:enumeration value="XXSMALL" >
                <xs:annotation><xs:documentation>Extra extra small font size</xs:documentation></xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="XSMALL" >
                <xs:annotation><xs:documentation>Extra small font size</xs:documentation></xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="SMALL" >
                <xs:annotation><xs:documentation>Small font size</xs:documentation></xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="MEDIUM" >
                <xs:annotation><xs:documentation>Medium font size</xs:documentation></xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="LARGE" >
                <xs:annotation><xs:documentation>Large font size</xs:documentation></xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="XLARGE" >
                <xs:annotation><xs:documentation>Extra large font size</xs:documentation></xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="XXLARGE" >
                <xs:annotation><xs:documentation>Extra extra large font size</xs:documentation></xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="5" >
                <xs:annotation><xs:documentation>font size 5</xs:documentation></xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="6" >
                <xs:annotation><xs:documentation>font size 6</xs:documentation></xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="7" >
                <xs:annotation><xs:documentation>font size 7</xs:documentation></xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="8" >
                <xs:annotation><xs:documentation>font size 8</xs:documentation></xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="9" >
                <xs:annotation><xs:documentation>font size 9</xs:documentation></xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="10" >
                <xs:annotation><xs:documentation>font size 10</xs:documentation></xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="11" >
                <xs:annotation><xs:documentation>font size 11</xs:documentation></xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="12" >
                <xs:annotation><xs:documentation>font size 12</xs:documentation></xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="13" >
                <xs:annotation><xs:documentation>font size 13</xs:documentation></xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="14" >
                <xs:annotation><xs:documentation>font size 14</xs:documentation></xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="15" >
                <xs:annotation><xs:documentation>font size 15</xs:documentation></xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="16" >
                <xs:annotation><xs:documentation>font size 16</xs:documentation></xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="17" >
                <xs:annotation><xs:documentation>font size 17</xs:documentation></xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="18" >
                <xs:annotation><xs:documentation>font size 18</xs:documentation></xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="19" >
                <xs:annotation><xs:documentation>font size 19</xs:documentation></xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="20" >
                <xs:annotation><xs:documentation>font size 20</xs:documentation></xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="21" >
                <xs:annotation><xs:documentation>font size 21</xs:documentation></xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="22" >
                <xs:annotation><xs:documentation>font size 22</xs:documentation></xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="23" >
                <xs:annotation><xs:documentation>font size 23</xs:documentation></xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="24" >
                <xs:annotation><xs:documentation>font size 24</xs:documentation></xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="25" >
                <xs:annotation><xs:documentation>font size 25</xs:documentation></xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="26" >
                <xs:annotation><xs:documentation>font size 26</xs:documentation></xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="27" >
                <xs:annotation><xs:documentation>font size 27</xs:documentation></xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="28" >
                <xs:annotation><xs:documentation>font size 28</xs:documentation></xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="29" >
                <xs:annotation><xs:documentation>font size 29</xs:documentation></xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="30" >
                <xs:annotation><xs:documentation>font size 30</xs:documentation></xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="31" >
                <xs:annotation><xs:documentation>font size 31</xs:documentation></xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="32" >
                <xs:annotation><xs:documentation>font size 32</xs:documentation></xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="33" >
                <xs:annotation><xs:documentation>font size 33</xs:documentation></xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="34" >
                <xs:annotation><xs:documentation>font size 34</xs:documentation></xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="35" >
                <xs:annotation><xs:documentation>font size 35</xs:documentation></xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="36" >
                <xs:annotation><xs:documentation>font size 36</xs:documentation></xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="37" >
                <xs:annotation><xs:documentation>font size 37</xs:documentation></xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="38" >
                <xs:annotation><xs:documentation>font size 38</xs:documentation></xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="39" >
                <xs:annotation><xs:documentation>font size 39</xs:documentation></xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="40" >
                <xs:annotation><xs:documentation>font size 40</xs:documentation></xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="41" >
                <xs:annotation><xs:documentation>font size 41</xs:documentation></xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="42" >
                <xs:annotation><xs:documentation>font size 42</xs:documentation></xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="43" >
                <xs:annotation><xs:documentation>font size 43</xs:documentation></xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="44" >
                <xs:annotation><xs:documentation>font size 44</xs:documentation></xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="45" >
                <xs:annotation><xs:documentation>font size 45</xs:documentation></xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="46" >
                <xs:annotation><xs:documentation>font size 46</xs:documentation></xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="47" >
                <xs:annotation><xs:documentation>font size 47</xs:documentation></xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="48" >
                <xs:annotation><xs:documentation>font size 48</xs:documentation></xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="49" >
                <xs:annotation><xs:documentation>font size 49</xs:documentation></xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="50" >
                <xs:annotation><xs:documentation>font size 50</xs:documentation></xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="51" >
                <xs:annotation><xs:documentation>font size 51</xs:documentation></xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="52" >
                <xs:annotation><xs:documentation>font size 52</xs:documentation></xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="53" >
                <xs:annotation><xs:documentation>font size 53</xs:documentation></xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="54" >
                <xs:annotation><xs:documentation>font size 54</xs:documentation></xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="55" >
                <xs:annotation><xs:documentation>font size 55</xs:documentation></xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="56" >
                <xs:annotation><xs:documentation>font size 56</xs:documentation></xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="57" >
                <xs:annotation><xs:documentation>font size 57</xs:documentation></xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="58" >
                <xs:annotation><xs:documentation>font size 58</xs:documentation></xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="59" >
                <xs:annotation><xs:documentation>font size 59</xs:documentation></xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="60" >
                <xs:annotation><xs:documentation>font size 60</xs:documentation></xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="61" >
                <xs:annotation><xs:documentation>font size 61</xs:documentation></xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="62" >
                <xs:annotation><xs:documentation>font size 62</xs:documentation></xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="63" >
                <xs:annotation><xs:documentation>font size 63</xs:documentation></xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="64" >
                <xs:annotation><xs:documentation>font size 64</xs:documentation></xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="65" >
                <xs:annotation><xs:documentation>font size 65</xs:documentation></xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="66" >
                <xs:annotation><xs:documentation>font size 66</xs:documentation></xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="67" >
                <xs:annotation><xs:documentation>font size 67</xs:documentation></xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="68" >
                <xs:annotation><xs:documentation>font size 68</xs:documentation></xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="69" >
                <xs:annotation><xs:documentation>font size 69</xs:documentation></xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="70" >
                <xs:annotation><xs:documentation>font size 70</xs:documentation></xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="71" >
                <xs:annotation><xs:documentation>font size 71</xs:documentation></xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="72" >
                <xs:annotation><xs:documentation>font size 72</xs:documentation></xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="73" >
                <xs:annotation><xs:documentation>font size 73</xs:documentation></xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="74" >
                <xs:annotation><xs:documentation>font size 74</xs:documentation></xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="75" >
                <xs:annotation><xs:documentation>font size 75</xs:documentation></xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="76" >
                <xs:annotation><xs:documentation>font size 76</xs:documentation></xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="77" >
                <xs:annotation><xs:documentation>font size 77</xs:documentation></xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="78" >
                <xs:annotation><xs:documentation>font size 78</xs:documentation></xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="79" >
                <xs:annotation><xs:documentation>font size 79</xs:documentation></xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="80" >
                <xs:annotation><xs:documentation>font size 80</xs:documentation></xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="81" >
                <xs:annotation><xs:documentation>font size 81</xs:documentation></xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="82" >
                <xs:annotation><xs:documentation>font size 82</xs:documentation></xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="83" >
                <xs:annotation><xs:documentation>font size 83</xs:documentation></xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="84" >
                <xs:annotation><xs:documentation>font size 84</xs:documentation></xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="85" >
                <xs:annotation><xs:documentation>font size 85</xs:documentation></xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="86" >
                <xs:annotation><xs:documentation>font size 86</xs:documentation></xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="87" >
                <xs:annotation><xs:documentation>font size 87</xs:documentation></xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="88" >
                <xs:annotation><xs:documentation>font size 88</xs:documentation></xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="89" >
                <xs:annotation><xs:documentation>font size 89</xs:documentation></xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="90" >
                <xs:annotation><xs:documentation>font size 90</xs:documentation></xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="91" >
                <xs:annotation><xs:documentation>font size 91</xs:documentation></xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="92" >
                <xs:annotation><xs:documentation>font size 92</xs:documentation></xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="93" >
                <xs:annotation><xs:documentation>font size 93</xs:documentation></xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="94" >
                <xs:annotation><xs:documentation>font size 94</xs:documentation></xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="95" >
                <xs:annotation><xs:documentation>font size 95</xs:documentation></xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="96" >
                <xs:annotation><xs:documentation>font size 96</xs:documentation></xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="97" >
                <xs:annotation><xs:documentation>font size 97</xs:documentation></xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="98" >
                <xs:annotation><xs:documentation>font size 98</xs:documentation></xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="99" >
                <xs:annotation><xs:documentation>font size 99</xs:documentation></xs:annotation>
            </xs:enumeration>
        </xs:restriction>
    </xs:simpleType>
    <xs:complexType name="FONT">
        <xs:annotation><xs:documentation>Font used in display of text</xs:documentation></xs:annotation>
        <xs:all>
            <xs:element name="name" type="xs:string" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Font name</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="size" type="FONTSIZE" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Font size</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="style" type="FONTSTYLE" minOccurs="0" maxOccurs="1">
                <xs:annotation><xs:documentation>Font style (bold, italic, normal, ...)</xs:documentation></xs:annotation>
            </xs:element>
        </xs:all>
    </xs:complexType>
    <xs:simpleType name="FONTSTYLE">
        <xs:annotation><xs:documentation>Possible font style </xs:documentation></xs:annotation>
        <xs:restriction base="xs:string">
            <xs:enumeration value="normal" >
                <xs:annotation><xs:documentation>Normal style</xs:documentation></xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="italic" >
                <xs:annotation><xs:documentation>Italic style</xs:documentation></xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="bold" >
                <xs:annotation><xs:documentation>Bold style</xs:documentation></xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="bold,italic" >
                <xs:annotation><xs:documentation>Bold italic style</xs:documentation></xs:annotation>
            </xs:enumeration>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="BOOL">
        <xs:annotation><xs:documentation>boolean</xs:documentation></xs:annotation>
        <xs:restriction base="xs:string">
            <xs:enumeration value="true" >
            </xs:enumeration>
            <xs:enumeration value="false" >
            </xs:enumeration>
        </xs:restriction>
    </xs:simpleType>
</xs:schema>
